{"version":3,"file":"static/js/381.e027e796.chunk.js","mappings":"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","sources":["webpack://darwinia_homepage/./src/page/PloContribute/styles.module.scss?3a65","page/PloContribute/hooks.js","page/PloContribute/components/btc-reward.js","page/PloContribute/img/accept.svg","page/PloContribute/img/accepted.svg","page/PloContribute/utils.js","page/PloContribute/components/metaverse-nft.js","page/PloContribute/useEcharts.js","page/PloContribute/components/global-contribution-activity.js","page/PloContribute/components/referral-leaderboard.js","page/PloContribute/img/apps/bifrost.svg","page/PloContribute/img/apps/parallel-heiko.svg","page/PloContribute/img/apps/equilibrium.svg","page/PloContribute/img/apps/huobi.svg","page/PloContribute/img/apps/gate-io.svg","page/PloContribute/img/apps/bigone.svg","page/PloContribute/img/apps/polkadot-js.svg","page/PloContribute/img/apps/math-wallet.svg","page/PloContribute/components/connection-failed-modal.js","page/PloContribute/index.js","utils.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"styles_main__paNDY\",\"magic-01\":\"styles_magic-01__dTdg-\",\"magic-02\":\"styles_magic-02__wrxSw\",\"claim-reward-btn\":\"styles_claim-reward-btn__Aj6Ih\",\"accounts-item\":\"styles_accounts-item__RVcdX\",\"my-contribute-connect-wallet-btn\":\"styles_my-contribute-connect-wallet-btn__sgU+d\",\"contribute-btn\":\"styles_contribute-btn__HefOh\",\"dot-amount-input-max-btn\":\"styles_dot-amount-input-max-btn__VgDAi\",\"heading-container-connnect-wallet-btn\":\"styles_heading-container-connnect-wallet-btn__3Xxs1\",\"heading-container-change-account\":\"styles_heading-container-change-account__ffL2n\",\"referral-leaderboard-title\":\"styles_referral-leaderboard-title__mHWT0\",\"contribute-pioneers-title\":\"styles_contribute-pioneers-title__kNvFw\",\"my-contribute-title\":\"styles_my-contribute-title__wwN3y\",\"my-referral-link-title-wrap\":\"styles_my-referral-link-title-wrap__+aVRh\",\"crowloan-title\":\"styles_crowloan-title__t7EWT\",\"contribute-title\":\"styles_contribute-title__ES8xp\",\"all-right\":\"styles_all-right__teTfZ\",\"claim-reward-btn-text\":\"styles_claim-reward-btn-text__wUlCX\",\"accounts-item-name-address\":\"styles_accounts-item-name-address__5Bfzd\",\"address\":\"styles_address__nl+xh\",\"transaction-in-progress\":\"styles_transaction-in-progress__IneTT\",\"global-contribute-address\":\"styles_global-contribute-address__3kOSw\",\"referral-leaderboard-item-rewards\":\"styles_referral-leaderboard-item-rewards__sFL1i\",\"referral-leaderboard-item-accumulated\":\"styles_referral-leaderboard-item-accumulated__j4lKk\",\"referral-leaderboard-item-referrals\":\"styles_referral-leaderboard-item-referrals__cK4eg\",\"referral-leaderboard-item-address\":\"styles_referral-leaderboard-item-address__aL3Mg\",\"referral-leaderboard-item-rank\":\"styles_referral-leaderboard-item-rank__Bchfs\",\"pioneers-item-dot-amount\":\"styles_pioneers-item-dot-amount__oJZ-E\",\"pioneers-item-account-name\":\"styles_pioneers-item-account-name__HpqNv\",\"pioneers-item-num-icon\":\"styles_pioneers-item-num-icon__K+L3C\",\"contribute-pioneers-title-rank\":\"styles_contribute-pioneers-title-rank__gZ8Nw\",\"contribute-history-control-item\":\"styles_contribute-history-control-item__xu92S\",\"referral-history-control-item\":\"styles_referral-history-control-item__XJmsK\",\"contribute-history-wrap\":\"styles_contribute-history-wrap__6NYkw\",\"referral-history-wrap\":\"styles_referral-history-wrap__t7UYA\",\"contribute-info-item-title\":\"styles_contribute-info-item-title__lKWiG\",\"my-referral-link-content\":\"styles_my-referral-link-content__hw5nt\",\"current-total-contribute\":\"styles_current-total-contribute__Swpq0\",\"total-rewards-wrap\":\"styles_total-rewards-wrap__2yBpQ\",\"auction-success-rewards-content-wrap\":\"styles_auction-success-rewards-content-wrap__gIGpU\",\"auction-success-rewards\":\"styles_auction-success-rewards__UqtKh\",\"invalid-referral-code\":\"styles_invalid-referral-code__QmV1K\",\"my-available-dot\":\"styles_my-available-dot__DkPvB\",\"min-contrbution\":\"styles_min-contrbution__hjmaN\",\"contribute-lebal\":\"styles_contribute-lebal__or0to\",\"heading-container-current-account\":\"styles_heading-container-current-account__Ie9uj\",\"heading-container-right-how-it-works-link\":\"styles_heading-container-right-how-it-works-link__U7Abc\",\"heading-container\":\"styles_heading-container__Qa9ds\",\"heading-container-logo\":\"styles_heading-container-logo__4FXcm\",\"heading-container-logo-img\":\"styles_heading-container-logo-img__owF-3\",\"heading-container-logo-plo\":\"styles_heading-container-logo-plo__DZcPm\",\"heading-container-right\":\"styles_heading-container-right__MaCB9\",\"heading-container-current-account-wrap\":\"styles_heading-container-current-account-wrap__Gwlpk\",\"contribute-crowloan-referral\":\"styles_contribute-crowloan-referral__bGzA6\",\"contribute\":\"styles_contribute__LaVJ4\",\"crowloan-referral\":\"styles_crowloan-referral__U8gU+\",\"contribute-lebal-wrap\":\"styles_contribute-lebal-wrap__zNDyr\",\"contribute-input\":\"styles_contribute-input__wuH2A\",\"referral-code-input\":\"styles_referral-code-input__6sDq7\",\"dot-amount-input-wrap\":\"styles_dot-amount-input-wrap__MjQ2z\",\"referral-code-input-wrap\":\"styles_referral-code-input-wrap__Los19\",\"auction-success-rewards-wrap\":\"styles_auction-success-rewards-wrap__9TLiy\",\"dot-amount-input-control\":\"styles_dot-amount-input-control__cH450\",\"referral-code-input-control\":\"styles_referral-code-input-control__md8Dx\",\"dot-amount-input-suffix\":\"styles_dot-amount-input-suffix__bWAD0\",\"dot-amount-input-dot-suffix\":\"styles_dot-amount-input-dot-suffix__+5NjW\",\"input-dot-tip-wrap\":\"styles_input-dot-tip-wrap__kNIED\",\"warning\":\"styles_warning__ua6nt\",\"show\":\"styles_show__lFkDd\",\"token-amount\":\"styles_token-amount__jDvlX\",\"total\":\"styles_total__bQn3N\",\"limited-time\":\"styles_limited-time__YCNNN\",\"info-icon\":\"styles_info-icon__4Py6e\",\"contribute-btn-container\":\"styles_contribute-btn-container__+3XVR\",\"contribute-btn-spinning\":\"styles_contribute-btn-spinning__zsg1k\",\"crowloan\":\"styles_crowloan__YR5Z1\",\"total-ring-rewards\":\"styles_total-ring-rewards__ONqAk\",\"total-kton-rewards\":\"styles_total-kton-rewards__DIk1z\",\"total-contribute-dot\":\"styles_total-contribute-dot__Br9in\",\"my-referral-link\":\"styles_my-referral-link__JCkps\",\"link\":\"styles_link__JEzMi\",\"my-contribute\":\"styles_my-contribute__Q-DD7\",\"my-contribute-title-wrap\":\"styles_my-contribute-title-wrap__llxs6\",\"connected\":\"styles_connected__cDSzo\",\"my-contribute-container-current-account-wrap\":\"styles_my-contribute-container-current-account-wrap__L6Mb0\",\"contribute-info-card\":\"styles_contribute-info-card__ItXdE\",\"contribute-info-item\":\"styles_contribute-info-item__CtDpK\",\"contribute-info-item-wrap\":\"styles_contribute-info-item-wrap__JFrO-\",\"contribute-info-item-title-wrap\":\"styles_contribute-info-item-title-wrap__NBiln\",\"contribute-info-item-value\":\"styles_contribute-info-item-value__j6E0P\",\"my-contribute-line\":\"styles_my-contribute-line__KdJ8Z\",\"my-contribute-history\":\"styles_my-contribute-history__mxyP4\",\"contribute-history-control\":\"styles_contribute-history-control__MeVDo\",\"referral-history-control\":\"styles_referral-history-control__EZ348\",\"no-data\":\"styles_no-data__gmURz\",\"hash-id\":\"styles_hash-id__cwZ4s\",\"dot-amount\":\"styles_dot-amount__2BE8c\",\"contribute-pioneers\":\"styles_contribute-pioneers__TUTmm\",\"contribute-pioneers-title-wrap\":\"styles_contribute-pioneers-title-wrap__1bbTD\",\"pioneers-container\":\"styles_pioneers-container__k7jF-\",\"pioneers-item\":\"styles_pioneers-item__AIRTV\",\"pioneers-item-account-icon\":\"styles_pioneers-item-account-icon__d+SFB\",\"crowloan-echarts\":\"styles_crowloan-echarts__ti2Ee\",\"referral-leaderboard\":\"styles_referral-leaderboard__JQclb\",\"referral-leaderboard-control\":\"styles_referral-leaderboard-control__xQMUL\",\"referral-leaderboard-item\":\"styles_referral-leaderboard-item__FTogk\",\"rank\":\"styles_rank__cEitk\",\"rank2\":\"styles_rank2__KcemQ\",\"rank3\":\"styles_rank3__R69-V\",\"global-contribute\":\"styles_global-contribute__mTvnb\",\"select-account-modal\":\"styles_select-account-modal__i2yFG\",\"connection-failed-modal\":\"styles_connection-failed-modal__zsimo\",\"connection-tips\":\"styles_connection-tips__D2Ipp\",\"tip\":\"styles_tip__aPKM4\",\"apps-container\":\"styles_apps-container__PExOb\",\"app\":\"styles_app__FHbV5\",\"icon\":\"styles_icon__Wmrld\",\"transaction-in-progress-modal\":\"styles_transaction-in-progress-modal__OGiT2\",\"accounts-container\":\"styles_accounts-container__7TsIE\",\"name\":\"styles_name__Plgd5\",\"thanks-for-support-modal\":\"styles_thanks-for-support-modal__9lE2p\",\"thanks-for-support-modal-content\":\"styles_thanks-for-support-modal-content__sNTeR\",\"thanks-for-support-modal-content-title\":\"styles_thanks-for-support-modal-content-title__OmV+0\",\"thanks-for-support-modal-content-desc\":\"styles_thanks-for-support-modal-content-desc__CEaJR\",\"thanks-for-support-modal-content-contact\":\"styles_thanks-for-support-modal-content-contact__A+edD\",\"thanks-for-support-modal-content-contact-item\":\"styles_thanks-for-support-modal-content-contact-item__IzKxD\",\"tooltip-overlay\":\"styles_tooltip-overlay__RuO2-\",\"tips\":\"styles_tips__Tpyxu\",\"current-tag\":\"styles_current-tag__ixwnJ\",\"space\":\"styles_space__C8TH+\",\"disabled\":\"styles_disabled__Bpfaz\",\"btc-reward-modal\":\"styles_btc-reward-modal__HLPlt\",\"total-contribute-history\":\"styles_total-contribute-history__wTHWA\",\"total-contribute-history-title-wrap\":\"styles_total-contribute-history-title-wrap__6x6lm\",\"metaverse-nft-modal\":\"styles_metaverse-nft-modal__jP2Nn\",\"metaverse-nft-modal-body\":\"styles_metaverse-nft-modal-body__Qcoab\",\"metaverse-nft-modal-title\":\"styles_metaverse-nft-modal-title__YIVSG\",\"metaverse-nft-modal-content\":\"styles_metaverse-nft-modal-content__72tnm\",\"metaverse-nft-modal-ok-btn-text\":\"styles_metaverse-nft-modal-ok-btn-text__-AJpD\",\"metaverse-nft-modal-ok-btn\":\"styles_metaverse-nft-modal-ok-btn__YaclF\",\"metaverse-nft-modal-copy-that-ok-btn\":\"styles_metaverse-nft-modal-copy-that-ok-btn__H912L\",\"metaverse-nft-modal-accept\":\"styles_metaverse-nft-modal-accept__-eHPO\",\"metaverse-nft-modal-address-input-wrap\":\"styles_metaverse-nft-modal-address-input-wrap__lFTbp\",\"metaverse-nft-modal-address-input\":\"styles_metaverse-nft-modal-address-input__D9sAH\",\"metaverse-nft-modal-address-warning\":\"styles_metaverse-nft-modal-address-warning__6WlI5\",\"metaverse-nft-modal-ok-btn-spin\":\"styles_metaverse-nft-modal-ok-btn-spin__Vfama\"};","import { useEffect, useState, useRef } from \"react\";\nimport { ApiPromise, WsProvider } from \"@polkadot/api\";\n\nexport const useApi = () => {\n  const [api, setApi] = useState(null);\n\n  useEffect(() => {\n    // const wsProvider = new WsProvider(\"wss://rpc.polkadot.io\");\n    const wsProvider = new WsProvider(\"wss://polkadot.api.onfinality.io/public-ws\");\n    ApiPromise.create({ provider: wsProvider })\n      .then((_api) => setApi(_api))\n      .catch((err) => console.error(err));\n  }, []);\n\n  return { api };\n};\n\nexport const useCurrentBlockNumber = (api) => {\n  const unsubRef = useRef(null);\n  const [currentBlockNumber, setCurrentBlockNumber] = useState(null);\n\n  useEffect(() => {\n    if (api) {\n      api.rpc.chain\n        .subscribeNewHeads((header) => {\n          // console.log(`Chain is at block: #${header.number}`);\n          setCurrentBlockNumber(Number(`${header.number}`));\n        })\n        .then((unsub) => {\n          unsubRef.current && unsubRef.current();\n          unsubRef.current = unsub;\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n\n    return () => {\n      unsubRef.current && unsubRef.current();\n      unsubRef.current = null;\n    };\n  }, [api]);\n\n  return { currentBlockNumber };\n};\n\nexport const useBalanceAll = (api, address) => {\n  const unsubRef = useRef(null);\n  const [currentAccountBalannce, setCurrentAccountBalannce] = useState({\n    freeBalance: \"0\",\n    lockedBalance: \"0\",\n    availableBalance: \"0\",\n  });\n\n  useEffect(() => {\n    if (api && address) {\n      api.derive.balances\n        .all(address, (balancesAll) => {\n          setCurrentAccountBalannce({\n            freeBalance: balancesAll.freeBalance.toString(),\n            lockedBalance: balancesAll.lockedBalance.toString(),\n            availableBalance: balancesAll.availableBalance.toString(),\n          });\n        })\n        .then((unsub) => {\n          unsubRef.current && unsubRef.current();\n          unsubRef.current = unsub;\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n\n    return () => {\n      unsubRef.current && unsubRef.current();\n      unsubRef.current = null;\n    };\n  }, [api, address]);\n\n  return { currentAccountBalannce };\n};\n","import { web3FromAddress } from \"@polkadot/extension-dapp\";\nimport { message, Modal, Tooltip, Typography } from \"antd\";\nimport classNames from \"classnames/bind\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useApi } from \"../hooks\";\nimport infoIcon from \"../img/info-icon.png\";\nimport modalCloseIcon from \"../img/modal-close.png\";\nimport styles from \"../styles.module.scss\";\nimport btcTop5 from \"../top5.json\";\n\nconst cx = classNames.bind(styles);\nconst { Paragraph, Title } = Typography;\nconst key = \"REWARDED_ACCOUNTS\";\n\nfunction BTCReward({ currentAccount }) {\n  const [visible, setVisible] = useState(0);\n  const [checked, setChecked] = useState(false);\n  const [address, setAddress] = useState(\"\");\n  const { api } = useApi();\n  const [isReward, setIsReward] = useState(false);\n\n  const target = currentAccount\n    ? btcTop5.find(({ address }) => address.toLowerCase() === currentAccount.address.toLowerCase())\n    : null;\n  const contributeAmount = target ? target.reward : 0;\n\n  const claim = async () => {\n    const mark = `BTC rewards for Darwinia Crowdloan: ${\n      target.reward\n    } BTC; Reward receiving address: ${address}; DOT contribution amount: ${target && target.amount}`;\n    const injector = await web3FromAddress(currentAccount.address);\n\n    api.setSigner(injector.signer);\n\n    try {\n      message.info(\"Please sign and send the transaction in Polkadot extension\");\n\n      const unsubscribe = await api.tx.system.remark(mark).signAndSend(currentAccount.address, async (result) => {\n        if (!result || !result.status) {\n          return;\n        }\n\n        message.info(\"Extrinsic processing\");\n\n        if (result.status.isFinalized || result.status.isInBlock) {\n          unsubscribe();\n\n          result.events\n            .filter(({ event: { section } }) => section === \"system\")\n            .forEach((res) => {\n              const {\n                event: { method },\n              } = res;\n\n              if (method === \"ExtrinsicFailed\") {\n                message.error(\"Extrinsic failed\");\n              } else if (method === \"ExtrinsicSuccess\") {\n                message.success(\"Extrinsic success\");\n\n                const data = localStorage.getItem(key);\n                const list = JSON.parse(data || \"[]\");\n\n                localStorage.setItem(key, JSON.stringify([...list, currentAccount.address]));\n\n                setVisible(2);\n              }\n            });\n        }\n\n        if (result.isError) {\n          message.error(\"Extrinsic Failed\");\n        }\n      });\n    } catch (err) {\n      message.error(\"Extrinsic Failed\");\n    }\n  };\n\n  useEffect(() => {\n    if (!currentAccount) {\n      return;\n    }\n\n    const data = localStorage.getItem(key);\n    const list = JSON.parse(data || \"[]\");\n\n    setIsReward(list.includes(currentAccount.address));\n  }, [currentAccount]);\n\n  return (\n    <>\n      <div className={cx(\"contribute-info-item\")}>\n        <div className={cx(\"contribute-info-item-title-wrap\")}>\n          <span className={cx(\"contribute-info-item-title\")}>BTC Rewards</span>\n          <Tooltip\n            overlayClassName=\"tooltip-overlay\"\n            overlayInnerStyle={{ padding: \"20px\", paddingBottom: \"10px\" }}\n            color=\"white\"\n            placement=\"rightTop\"\n            trigger={[\"click\", \"hover\"]}\n            title={\n              <p className={cx(\"tips\")}>\n                BTC rewards are dynamic.\n                <br />\n                <br />\n                At the beginning of the second round auction, supporters who have contributed more than 10,000 DOT and\n                the top 5 people (exclude the Exchange address) ranking will distribute 1 BTC in proportion to their\n                contribution.\n                <br />\n                <br />1 BTC will be released immediately after the second round auction starts regardless of whether\n                Darwinia Network wins the slot auction or not.\n              </p>\n            }\n          >\n            <img alt=\"...\" src={infoIcon} className={cx(\"info-icon\")} />\n          </Tooltip>\n        </div>\n        <div className={cx(\"current-tag\")}>\n          <span>Current</span>\n        </div>\n        <span className={cx(\"contribute-info-item-value\")}>{contributeAmount}</span>\n        {target ? (\n          <Tooltip\n            overlayClassName=\"tooltip-overlay\"\n            overlayInnerStyle={{ padding: \"20px\", paddingBottom: \"10px\" }}\n            color=\"white\"\n            placement=\"rightTop\"\n            trigger={[\"click\", \"hover\"]}\n            title={\n              <p className={cx(\"tips\")}>\n                BTC Rewards for Darwinia Polkadot Parachain Slot Auction have been Delivered!\n                <br />\n                <br />\n                {`Please track the rewards by checking the Hash “${target.hash}“.`}\n                <br />\n                <br />\n                Please feel free to contact us through “hello@darwinia.network” if you have any question.\n              </p>\n            }\n          >\n            <button className={cx(\"claim-reward-btn\", \"disabled\")}>\n              <span>Claimed</span>\n            </button>\n          </Tooltip>\n        ) : isReward ? (\n          <button className={cx(\"claim-reward-btn\")} disabled={true} onClick={() => setVisible(1)}>\n            <span>Claimed</span>\n          </button>\n        ) : (\n          <button className={cx(\"claim-reward-btn\")} disabled={true} onClick={() => setVisible(1)}>\n            <span>Claim</span>\n          </button>\n        )}\n      </div>\n\n      <Modal\n        visible={visible === 1}\n        title={\n          <Title level={5} style={{ textAlign: \"center\" }}>\n            Claim BTC\n          </Title>\n        }\n        closeIcon={<img alt=\"...\" src={modalCloseIcon} onClick={() => setVisible(0)} />}\n        className={cx(\"btc-reward-modal\")}\n        footer={null}\n      >\n        <Form noValidate>\n          <ul>\n            <li>\n              <Paragraph>The BTC is sent as a reward for your support of Darwinia Network Crowdloan.</Paragraph>\n            </li>\n\n            <li>\n              <Paragraph>You need to fill in the correct BTC receiving address.</Paragraph>\n            </li>\n\n            <li>\n              <Paragraph>The reward will be distributed within a month after the second auction starts.</Paragraph>\n            </li>\n            <li>\n              <Paragraph>\n                Please feel free to contact us through \"hello@darwinia.network\" if you have any question.\n              </Paragraph>\n            </li>\n            <li style={{ listStyle: \"none\" }}>\n              <Paragraph>\n                Please fill in the BTC address starts with \"3\", this is the address format of Nested SegWit(P2SH). If\n                you choose an unsupported network or incompatible assets, your funds may not be recovered.\n              </Paragraph>\n            </li>\n          </ul>\n          <Form.Group>\n            <Form.Check\n              required\n              feedback=\"You must agree before submitting\"\n              type=\"checkbox\"\n              onChange={() => {\n                setChecked(!checked);\n              }}\n              isInvalid={!checked}\n              label=\"I accept and continue to claim\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"address\">\n            <Form.Control\n              required\n              isInvalid={!address}\n              placeholder=\"Please enter your BTC receiving address\"\n              onChange={(event) => {\n                setAddress(event.target.value);\n              }}\n            ></Form.Control>\n            <Form.Control.Feedback type=\"invalid\">You must enter a BTC address</Form.Control.Feedback>\n          </Form.Group>\n\n          <Button\n            onClick={async () => {\n              if (!checked) {\n                message.error(\"You must accept then continue!\");\n                return;\n              }\n\n              if (!address.startsWith(\"3\")) {\n                message.error(\"You must enter a BTC address!\");\n                return;\n              }\n\n              await claim();\n            }}\n            className=\"submit-btn\"\n          >\n            I accept and claim\n          </Button>\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={visible === 2}\n        title={\n          <Title level={5} style={{ textAlign: \"center\" }}>\n            Copy that!\n          </Title>\n        }\n        closeIcon={<img alt=\"...\" src={modalCloseIcon} onClick={() => setVisible(0)} />}\n        className={cx(\"btc-reward-modal\")}\n        footer={null}\n      >\n        <ul>\n          <li>\n            <Paragraph>The reward will be distributed within a month after the second auction starts.</Paragraph>\n          </li>\n\n          <li>\n            <Paragraph>\n              Please feel free to contact us through \"hello@darwinia.network\" if you have any question.\n            </Paragraph>\n          </li>\n        </ul>\n\n        <Button\n          onClick={() => {\n            setVisible(0);\n          }}\n          className=\"submit-btn\"\n          style={{ width: \"50%\", marginLeft: \"25%\" }}\n        >\n          Ok\n        </Button>\n      </Modal>\n    </>\n  );\n}\n\nexport default React.memo(BTCReward);\n","var _rect;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgAccept(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 28,\n    height: 28,\n    viewBox: \"0 0 28 28\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 1,\n    y: 1,\n    width: 26,\n    height: 26,\n    rx: 10,\n    fill: \"white\",\n    fillOpacity: 0.5,\n    stroke: \"#CCCCCC\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAccept);\nexport default __webpack_public_path__ + \"static/media/accept.e9893ce3abab9276517e1364149e38fc.svg\";\nexport { ForwardRef as ReactComponent };","var _rect, _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgAccepted(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 28,\n    height: 28,\n    viewBox: \"0 0 28 28\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 1,\n    y: 1,\n    width: 26,\n    height: 26,\n    rx: 10,\n    fill: \"white\",\n    fillOpacity: 0.5,\n    stroke: \"#CCCCCC\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.48905 13.6648C7.75165 12.8424 6.48719 12.7735 5.66481 13.5109C4.84243 14.2483 4.77355 15.5128 5.51095 16.3352L8.48905 13.6648ZM11.4834 20L9.99431 21.3352C10.3546 21.737 10.8619 21.9761 11.4011 21.9983C11.9402 22.0205 12.4655 21.8239 12.8576 21.4531L11.4834 20ZM22.3742 12.4531C23.1767 11.6941 23.2121 10.4283 22.4531 9.62578C21.6941 8.82325 20.4283 8.78793 19.6258 9.54689L22.3742 12.4531ZM5.51095 16.3352L9.99431 21.3352L12.9724 18.6648L8.48905 13.6648L5.51095 16.3352ZM12.8576 21.4531L22.3742 12.4531L19.6258 9.54689L10.1091 18.5469L12.8576 21.4531Z\",\n    fill: \"#EC3783\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAccepted);\nexport default __webpack_public_path__ + \"static/media/accepted.d3b0d7ff4c0e14303646a5f3bd38644a.svg\";\nexport { ForwardRef as ReactComponent };","import { decodeAddress, encodeAddress } from \"@polkadot/keyring\";\nimport { hexToU8a, u8aToHex, isHex, formatBalance } from \"@polkadot/util\";\nimport { Keyring } from \"@polkadot/keyring\";\nimport BN from \"bn.js\";\nimport Big from \"big.js\";\n\nexport const RING_REWARD = 200000000;\nexport const KTON_REWARD = 8000;\nexport const BTC_THRESHOLD = 10000; // 10000 DOT\nexport const DOT_PRECISION = new BN(\"10000000000\");\n\nexport const shortAddress = (address = \"\") => {\n  if (address.length && address.length > 12) {\n    return `${address.slice(0, 5)}...${address.slice(address.length - 5)}`;\n  }\n  return address;\n};\n\nconst MAX_INPUT_DOT = Number(9999999999999);\nexport const isValidContributeDOTInput = (amount) => !isNaN(amount) && Number(amount) <= MAX_INPUT_DOT;\n\nexport const isInsufficientBalance = (availableOrig, needDOT) =>\n  Big(availableOrig).lt(Big(Number(needDOT)).mul(DOT_PRECISION.toString()));\n\nexport const isValidAddressPolkadotAddress = (address) => {\n  try {\n    encodeAddress(isHex(address) ? hexToU8a(address) : decodeAddress(address));\n\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport const isValidReferralCode = (referralCode) => {\n  try {\n    const address = encodeAddress(hexToU8a(`0x${referralCode}`));\n    return isValidAddressPolkadotAddress(address);\n  } catch (error) {\n    return false;\n  }\n};\n\nexport const polkadotAddressToPublicKey = (address) => u8aToHex(decodeAddress(address));\nexport const publicKeyToPolkadotAddress = (publicKey) => {\n  try {\n    const address = encodeAddress(hexToU8a(publicKey));\n    const keyring = new Keyring();\n    keyring.setSS58Format(0); // Polkadot format address\n    return keyring.addFromAddress(address).address;\n  } catch (error) {\n    // console.error(error);\n    return publicKey;\n  }\n};\n\nexport const polkadotAddressToReferralCode = (address) => polkadotAddressToPublicKey(address);\nexport const referralCodeToPolkadotAddress = (referralCode) => publicKeyToPolkadotAddress(referralCode);\n\nexport const formatBalanceFromOrigToDOT = (origBalance) =>\n  formatBalance(BN.isBN(origBalance) ? origBalance : new BN(origBalance), {\n    forceUnit: true,\n    withUnit: false,\n    withSi: false,\n    decimals: 10,\n  });\n\nexport const formatBalanceFromDOTToOrig = (dotBalance) => Big(dotBalance).mul(DOT_PRECISION.toString()).toString();\n","import React, { useState } from \"react\";\nimport classNames from \"classnames/bind\";\nimport { Tooltip, Modal, Spin, message } from \"antd\";\nimport Web3Utils from \"web3-utils\";\nimport { web3FromAddress } from \"@polkadot/extension-dapp\";\n\nimport acceptIcon from \"../img/accept.svg\";\nimport acceptedIcon from \"../img/accepted.svg\";\nimport infoIcon from \"../img/info-icon.png\";\nimport modalCloseIcon from \"../img/modal-close.png\";\n\nimport { useApi } from \"../hooks\";\nimport { DOT_PRECISION } from \"../utils\";\nimport styles from \"../styles.module.scss\";\n\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, gql } from \"@apollo/client\";\n\nconst GET_MY_ADDRESS_REMARKS = gql`\n  query RemarkedNftAddresses($signer: String!) {\n    remarkedNftAddresses(\n      filter: { signer: { equalTo: $signer } }\n      orderBy: [BLOCK_NUMBER_ASC, EXTRINSIC_INDEX_ASC]\n      first: 5\n    ) {\n      nodes {\n        id\n        # signer\n        # value\n        # addressValue\n        # blockNumber\n        # extrinsicIndex\n        # extrinsicTimestamp\n        # extrinsicHash\n        # https://kusama.subscan.io/extrinsic/11416211-2\n        # https://kusama.subscan.io/extrinsic/0x59ffa39f7b6f08c0958f824b140a839e049dda47aa89ea6337257712d4d2e0bd\n      }\n    }\n  }\n`;\n\nconst excludedList = [\"13wNbioJt44NKrcQ5ZUrshJqP7TKzQbzZt5nhkeL4joa3PAX\"];\n\nconst cx = classNames.bind(styles);\n\nconst isAnValidDarwiniaAddress = (address) => {\n  return Web3Utils.isAddress(address || \"\");\n};\n\nconst MetaverseNFT = ({ myTotalContribute, currentAccount }) => {\n  const { api } = useApi();\n  const [isRemarked, setIsRemarked] = useState(false);\n  const [isAccepted, setIsAccepted] = useState(false);\n  const [claimLoading, setClaimLoading] = useState(false);\n  const [visibleModalCopyThat, setVisibleModalCopyThat] = useState(false);\n  const [visibleModalClaimNFT, setVisibleModalClaimNFT] = useState(false);\n  const [nftDarwiniaAddress, setNftDarwiniaAddress] = useState(\"\");\n\n  const { loading, error, data } = useQuery(GET_MY_ADDRESS_REMARKS, {\n    variables: { signer: currentAccount ? currentAccount.address : \"\" },\n  });\n  error && console.error(error);\n  const myRemarked =\n    !loading && !error && data && data.remarkedNftAddresses && data.remarkedNftAddresses.nodes.length\n      ? data.remarkedNftAddresses.nodes[0]\n      : null;\n\n  const handleClickAcceptAndClaim = async () => {\n    setClaimLoading(true);\n    const injector = await web3FromAddress(currentAccount.address);\n    api.setSigner(injector.signer);\n\n    try {\n      message.info(\"Please sign and send the transaction in Polkadot extension\");\n\n      const mark = `NFT amount: 1; Rewards receiving address: ${nftDarwiniaAddress}`;\n      const unsubscribe = await api.tx.system.remark(mark).signAndSend(currentAccount.address, async (result) => {\n        if (!result || !result.status) {\n          return;\n        }\n        message.info(\"Extrinsic processing\");\n\n        if (result.status.isFinalized || result.status.isInBlock) {\n          unsubscribe();\n\n          result.events\n            .filter(({ event: { section } }) => section === \"system\")\n            .forEach((res) => {\n              const {\n                event: { method },\n              } = res;\n\n              if (method === \"ExtrinsicFailed\") {\n                message.error(\"Extrinsic failed\");\n              } else if (method === \"ExtrinsicSuccess\") {\n                message.success(\"Extrinsic success\");\n                setIsRemarked(true);\n                setClaimLoading(false);\n                setVisibleModalClaimNFT(false);\n                setVisibleModalCopyThat(true);\n              }\n            });\n        }\n\n        if (result.isError) {\n          setClaimLoading(false);\n          message.error(\"Extrinsic Failed\");\n        }\n      });\n    } catch (err) {\n      console.error(err);\n      setClaimLoading(false);\n      message.error(\"Extrinsic Failed\");\n    }\n  };\n\n  const isExcluded = excludedList.find((v) => currentAccount && v === currentAccount.address);\n\n  return (\n    <>\n      <div className={cx(\"contribute-info-item\")}>\n        <div className={cx(\"contribute-info-item-title-wrap\")}>\n          <span className={cx(\"contribute-info-item-title\")}>Metaverse NFT Package</span>\n          <Tooltip\n            overlayClassName=\"tooltip-overlay\"\n            overlayInnerStyle={{ padding: \"20px\", paddingBottom: \"10px\" }}\n            color=\"white\"\n            placement=\"rightTop\"\n            trigger={[\"click\", \"hover\"]}\n            title={\n              <p className={cx(\"tips\")}>\n                You can get an{\" \"}\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.evolution.land/\">\n                  Evolution Land\n                </a>{\" \"}\n                Metaverse NFT Package when your contribution share greater or equal 10 DOT and you will have a chance to\n                get a limited edition commemorative NFT in the Package.\n                <br />\n                <br />\n                The Metaverse NFT Package will be awarded after the Polkadot Slot Auction is terminated regardless of\n                whether Darwinia Network wins the slot auction or not.\n              </p>\n            }\n          >\n            <img alt=\"...\" src={infoIcon} className={cx(\"info-icon\")} />\n          </Tooltip>\n        </div>\n        <div className={cx(\"current-tag\", \"space\")}>\n          <span>Current</span>\n        </div>\n        <span className={cx(\"contribute-info-item-value\")}>\n          {myTotalContribute.gte(DOT_PRECISION.muln(10)) && !isExcluded ? \"1\" : \"0\"}\n        </span>\n        {isRemarked || myRemarked ? (\n          <Tooltip\n            overlayClassName=\"tooltip-overlay\"\n            overlayInnerStyle={{ padding: \"20px\", paddingBottom: \"10px\" }}\n            color=\"white\"\n            placement=\"rightTop\"\n            trigger={[\"click\", \"hover\"]}\n            title={\n              <div>\n                <p className={cx(\"tips\")}>\n                  <strong>Your address has been recorded!</strong>\n                </p>\n                <p className={cx(\"tips\")}>\n                  NFT will be distributed after 2 rounds of Evolution Land Columbus Continent sales end.\n                </p>\n                <p className={cx(\"tips\")}>\n                  Please track the NFT rewards by switching to{\" \"}\n                  <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.evolution.land/lands\">\n                    Columbus Continent\n                  </a>{\" \"}\n                  of Evolution Land, or stay tuned on our official Twitter.\n                </p>\n                <p className={cx(\"tips\")}>\n                  Please feel free to contact us through \"\n                  <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"mailto:hello@darwinia.network\">\n                    hello@darwinia.network\n                  </a>\n                  \" if you have any questions.\n                </p>\n              </div>\n            }\n          >\n            <button className={cx(\"claim-reward-btn\", \"disabled\")}>\n              <span className={cx(\"claim-reward-btn-text\")}>Claimed</span>\n            </button>\n          </Tooltip>\n        ) : (\n          <button\n            className={cx(\"claim-reward-btn\")}\n            disabled={myTotalContribute.lt(DOT_PRECISION.muln(10)) || loading || !currentAccount || isExcluded}\n            onClick={() => setVisibleModalClaimNFT(true)}\n          >\n            <Spin wrapperClassName={cx(\"metaverse-nft-modal-ok-btn-spin\")} spinning={loading}>\n              <span className={cx(\"claim-reward-btn-text\")}>Claim</span>\n            </Spin>\n          </button>\n        )}\n      </div>\n\n      <Modal\n        visible={visibleModalCopyThat}\n        title={null}\n        footer={null}\n        onCancel={() => setVisibleModalCopyThat(false)}\n        closeIcon={<img alt=\"...\" src={modalCloseIcon} />}\n        className={cx(\"metaverse-nft-modal\")}\n      >\n        <div className={cx(\"metaverse-nft-modal-body\")}>\n          <h5 className={cx(\"metaverse-nft-modal-title\")}>Copy that!</h5>\n          <ul className={cx(\"metaverse-nft-modal-content\")}>\n            <li>Your address has been recorded!</li>\n            <li>\n              Please track the NFT rewards by switching to Columbus Continent of Evolution Land, or stay tuned on our\n              official Twitter.\n            </li>\n            <li>\n              Please feel free to contact us through \"\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"mailto:hello@darwinia.network\">\n                hello@darwinia.network\n              </a>\n              \" if you have any questions.\n            </li>\n          </ul>\n          <button\n            className={cx(\"metaverse-nft-modal-ok-btn\", \"metaverse-nft-modal-copy-that-ok-btn\")}\n            onClick={() => setVisibleModalCopyThat(false)}\n          >\n            <span className={cx(\"metaverse-nft-modal-ok-btn-text\")}>OK</span>\n          </button>\n        </div>\n      </Modal>\n      <Modal\n        visible={visibleModalClaimNFT}\n        title={null}\n        footer={null}\n        onCancel={() => setVisibleModalClaimNFT(false)}\n        closeIcon={<img alt=\"...\" src={modalCloseIcon} />}\n        className={cx(\"metaverse-nft-modal\")}\n      >\n        <div className={cx(\"metaverse-nft-modal-body\")}>\n          <h5 className={cx(\"metaverse-nft-modal-title\")}>Claim NFT</h5>\n          <ul className={cx(\"metaverse-nft-modal-content\")}>\n            <li>The NFT is sent as a reward for your support of Darwinia Network Crowdloan.</li>\n            <li>\n              You need to fill in the correct Crab Smart Chain receiving address <strong>starts with “0x”</strong>.\n            </li>\n            <li>\n              The reward will be distributed after 2 rounds of Evolution Land{\" \"}\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.evolution.land/lands\">\n                Columbus Continent\n              </a>{\" \"}\n              sales end.\n            </li>\n            <li>\n              Please feel free to contact us through \"\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"mailto:hello@darwinia.network\">\n                hello@darwinia.network\n              </a>\n              \" if you have any questions.\n            </li>\n          </ul>\n          <div className={cx(\"metaverse-nft-modal-accept\")}>\n            <button onClick={() => setIsAccepted((prev) => !prev)}>\n              <img alt=\"...\" src={isAccepted ? acceptedIcon : acceptIcon} />\n            </button>\n            <span>I accept and continue to claim</span>\n          </div>\n          <div className={cx(\"metaverse-nft-modal-address-input-wrap\")}>\n            <input\n              onChange={(event) => setNftDarwiniaAddress(event.target.value)}\n              className={cx(\"metaverse-nft-modal-address-input\")}\n              disabled={claimLoading || !isAccepted}\n              placeholder=\"Please enter your receiving address\"\n            />\n            <span\n              className={cx(\"metaverse-nft-modal-address-warning\", {\n                disabled: !nftDarwiniaAddress || isAnValidDarwiniaAddress(nftDarwiniaAddress),\n              })}\n            >\n              Please fill in the correct receiving address starts with “0x”.{\" \"}\n            </span>\n          </div>\n          <button\n            className={cx(\"metaverse-nft-modal-ok-btn\")}\n            disabled={\n              claimLoading || !isAccepted || !nftDarwiniaAddress || !isAnValidDarwiniaAddress(nftDarwiniaAddress)\n            }\n            onClick={handleClickAcceptAndClaim}\n          >\n            <Spin wrapperClassName={cx(\"metaverse-nft-modal-ok-btn-spin\")} spinning={claimLoading}>\n              <span className={cx(\"metaverse-nft-modal-ok-btn-text\")}>I accept and claim</span>\n            </Spin>\n          </button>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nconst client = new ApolloClient({\n  uri: \"https://api.subquery.network/sq/JayJay1024/darwinia-nft\",\n  cache: new InMemoryCache(),\n});\n\nconst MetaverseNFTWrap = (props) => (\n  <ApolloProvider client={client}>\n    <MetaverseNFT {...props} />\n  </ApolloProvider>\n);\n\nexport default React.memo(MetaverseNFTWrap);\n","import { useEffect, useState } from \"react\";\nimport BN from \"bn.js\";\nimport Big from \"big.js\";\nimport { DOT_PRECISION } from \"./utils\";\nimport crowdloanContributeds from \"./data/crowdloanContributeds.json\";\n\nimport * as echarts from \"echarts/core\";\nimport {\n  TitleComponent,\n  ToolboxComponent,\n  TooltipComponent,\n  GridComponent,\n  DataZoomComponent,\n} from \"echarts/components\";\nimport { LineChart } from \"echarts/charts\";\nimport { UniversalTransition } from \"echarts/features\";\nimport { CanvasRenderer } from \"echarts/renderers\";\n\necharts.use([\n  TitleComponent,\n  ToolboxComponent,\n  TooltipComponent,\n  GridComponent,\n  DataZoomComponent,\n  LineChart,\n  CanvasRenderer,\n  UniversalTransition,\n]);\n\nexport const useEcharts = (dom) => {\n  const [totalContributed, setTotalContributed] = useState(new BN(0));\n\n  useEffect(() => {\n    const chart = dom ? echarts.init(dom) : null;\n\n    if (chart) {\n      const date = [];\n      const data = [];\n\n      for (let node of crowdloanContributeds.data.crowdloanContributeds.nodes) {\n        const amount = new BN(node.balance);\n\n        date.push(node.timestamp.split(\"T\")[0].replace(/-/g, \"/\"));\n        data.push(data.length ? data[data.length - 1].add(amount) : amount);\n      }\n\n      if (data.length) {\n        setTotalContributed(data[data.length - 1]);\n      }\n\n      const option = {\n        tooltip: {\n          trigger: \"axis\",\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          data: date,\n        },\n        yAxis: {\n          type: \"value\",\n        },\n        series: [\n          {\n            name: \"Contribute DOT\",\n            type: \"line\",\n            symbol: \"none\",\n            sampling: \"lttb\",\n            itemStyle: {\n              color: \"rgb(255, 70, 131)\",\n            },\n            areaStyle: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                {\n                  offset: 0,\n                  color: \"rgb(255, 158, 68)\",\n                },\n                {\n                  offset: 1,\n                  color: \"rgb(255, 70, 131)\",\n                },\n              ]),\n            },\n            data: data.map((d) => Big(d.toString()).div(DOT_PRECISION.toString()).toFixed(4)),\n          },\n        ],\n      };\n\n      chart.setOption(option);\n    }\n\n    return () => {\n      if (chart) {\n        chart.dispose();\n      }\n    };\n  }, [dom]);\n\n  return { totalContributed };\n};\n","import Fade from \"react-reveal/Fade\";\nimport { Table } from \"antd\";\nimport React from \"react\";\nimport classNames from \"classnames/bind\";\nimport styles from \"../styles.module.scss\";\nimport { formatBalanceFromOrigToDOT, KTON_REWARD, RING_REWARD, shortAddress } from \"../utils\";\nimport Big from \"big.js\";\nimport btcTop5 from \"../top5.json\";\n\nimport crowdloanWhoStatistics from \"../data/crowdloanWhoStatistics.json\";\n\nconst cx = classNames.bind(styles);\n\nconst GlobalContributionActivity = ({ allReferContributeData, globalTotalPower, top5contribute }) => {\n  const allWhoCrowdloan = crowdloanWhoStatistics;\n\n  const globalContributeColumns = [\n    {\n      title: \"Address\",\n      dataIndex: \"address\",\n      key: \"address\",\n      align: \"left\",\n      width: \"17%\",\n      render: (text) => (\n        <a\n          className={cx(\"global-contribute-address\")}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={`https://polkadot.subscan.io/account/${text}`}\n        >\n          {shortAddress(text)}\n        </a>\n      ),\n    },\n    {\n      title: \"Contributed DOT\",\n      dataIndex: \"myDot\",\n      key: \"myDot\",\n      align: \"center\",\n    },\n    {\n      title: \"Referrals\",\n      dataIndex: \"referrals\",\n      key: \"referrals\",\n      align: \"center\",\n    },\n    {\n      title: `Referrer's Contributed DOT`,\n      dataIndex: \"referralDot\",\n      key: \"referralDot\",\n      align: \"center\",\n    },\n    {\n      title: \"Current RING Rewards\",\n      dataIndex: \"curRingRewards\",\n      key: \"curRingRewards\",\n      align: \"center\",\n    },\n    {\n      title: \"Current KTON Rewards\",\n      dataIndex: \"curKtonRewards\",\n      key: \"curKtonRewards\",\n      align: \"center\",\n    },\n    {\n      title: \"Current BTC Rewards\",\n      dataIndex: \"curBtcRewards\",\n      key: \"curBtcRewards\",\n      align: \"center\",\n    },\n    {\n      title: \"Metaverse NFT Package\",\n      dataIndex: \"curNft\",\n      key: \"curNft\",\n      align: \"center\",\n    },\n  ];\n\n  const allWhoContributeData = [];\n  if (!allWhoCrowdloan.loading && !allWhoCrowdloan.error) {\n    if (\n      allWhoCrowdloan.data &&\n      allWhoCrowdloan.data.crowdloanWhoStatistics &&\n      allWhoCrowdloan.data.crowdloanWhoStatistics.nodes &&\n      allWhoCrowdloan.data.crowdloanWhoStatistics.nodes.length\n    ) {\n      allWhoCrowdloan.data.crowdloanWhoStatistics.nodes.forEach((node) => {\n        allWhoContributeData.push({\n          user: node.user,\n          totalPower: node.totalPower,\n          totalBalance: node.totalBalance,\n        });\n      });\n    }\n  }\n\n  const globalContributeDataSource = [];\n  for (let i = 0; i < allWhoContributeData.length; i++) {\n    const nodeWho = allWhoContributeData[i];\n    const nodeRefer = allReferContributeData.find((node) => node.user === nodeWho.user); // { user: address };\n    const contributePer = Big(nodeWho.totalPower).div(globalTotalPower.toString());\n    const target = btcTop5.find((item) => item.address === nodeWho.user);\n\n    globalContributeDataSource.push({\n      key: i,\n      address: nodeWho.user,\n      myDot: formatBalanceFromOrigToDOT(nodeWho.totalBalance),\n      referrals: nodeRefer ? nodeRefer.contributorsCount : 0,\n      referralDot: nodeRefer ? formatBalanceFromOrigToDOT(nodeRefer.totalBalance) : 0,\n      curRingRewards: \"0\" || contributePer.times(RING_REWARD).toFixed(3),\n      curKtonRewards: \"0\" || contributePer.times(KTON_REWARD).toFixed(3),\n      curBtcRewards: target ? target.reward : \"0\",\n      curNft: \"No Status\",\n    });\n  }\n\n  return (\n    <Fade bottom fraction={0.1} duration={1000} distance={\"50px\"}>\n      <Table\n        className={cx(\"global-contribute\")}\n        columns={globalContributeColumns}\n        dataSource={globalContributeDataSource}\n        title={() => \"Global Contribution Activity\"}\n        loading={allWhoCrowdloan.loading}\n        pagination={{\n          total: allWhoCrowdloan.data ? allWhoCrowdloan.data.crowdloanWhoStatistics.totalCount : 0,\n          size: \"small\",\n          showSizeChanger: false,\n        }}\n      />\n    </Fade>\n  );\n};\n\nexport default React.memo(GlobalContributionActivity);\n","import {\n  formatBalanceFromOrigToDOT,\n  KTON_REWARD,\n  referralCodeToPolkadotAddress,\n  RING_REWARD,\n  shortAddress,\n} from \"../utils\";\nimport Fade from \"react-reveal/Fade\";\nimport React, { memo } from \"react\";\nimport classNames from \"classnames/bind\";\nimport styles from \"../styles.module.scss\";\nimport BN from \"bn.js\";\nimport Big from \"big.js\";\n\nimport crowdloanReferStatistics from \"../data/crowdloanReferStatistics.json\";\n\nconst cx = classNames.bind(styles);\n\nconst ReferralLeaderboard = ({ globalTotalPower }) => {\n  const allReferCrowdloan = crowdloanReferStatistics.data.crowdloanReferStatistics.nodes.slice(0, 20);\n\n  const referralLeaderboardData = [];\n  allReferCrowdloan.forEach((node) => {\n    const nodeTotalPowerBN = new BN(node.totalPower);\n    const contributePer = Big(nodeTotalPowerBN.toString()).div(globalTotalPower.toString());\n\n    referralLeaderboardData.push({\n      address: referralCodeToPolkadotAddress(node.user),\n      referrals: node.contributors.nodes.length,\n      accumulatedContribution: node.totalBalance,\n      referralRewards: {\n        ring: contributePer.mul(RING_REWARD),\n        kton: contributePer.mul(KTON_REWARD),\n      },\n    });\n  });\n\n  return (\n    <Fade bottom fraction={0.1} duration={1000} distance={\"50px\"}>\n      <div className={cx(\"referral-leaderboard\")}>\n        <h3 className={cx(\"referral-leaderboard-title\")}>Referral Leaderboard</h3>\n        <div className={cx(\"referral-leaderboard-control\")}>\n          <div className={cx(\"referral-leaderboard-item\")}>\n            <span className={cx(\"referral-leaderboard-item-rank\")}>Rank</span>\n            <span className={cx(\"referral-leaderboard-item-address\")}>Address</span>\n            <span className={cx(\"referral-leaderboard-item-referrals\")}>Referrals</span>\n            <span className={cx(\"referral-leaderboard-item-accumulated\")}>Accumulated Contribution</span>\n            <span className={cx(\"referral-leaderboard-item-rewards\")}>Referral Rewards</span>\n          </div>\n\n          {referralLeaderboardData.length ? (\n            referralLeaderboardData.map((data, index) => (\n              <div className={cx(\"referral-leaderboard-item\")} key={index}>\n                <div className={cx(\"referral-leaderboard-item-rank\")}>\n                  <div className={cx({ rank: index < 5, rank2: 5 <= index && index < 99, rank3: 99 <= index })}>\n                    <span>{index + 1}</span>\n                  </div>\n                </div>\n                <a\n                  className={cx(\"referral-leaderboard-item-address\")}\n                  style={{ color: \"#488CCB\" }}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  href={`https://polkadot.subscan.io/account/${data.address}`}\n                >\n                  {shortAddress(data.address)}\n                </a>\n                <span className={cx(\"referral-leaderboard-item-referrals\")}>{data.referrals}</span>\n                <span className={cx(\"referral-leaderboard-item-accumulated\")}>\n                  {formatBalanceFromOrigToDOT(data.accumulatedContribution)} DOT\n                </span>\n                <div className={cx(\"referral-leaderboard-item-rewards\")}>\n                  <span>{\"0\" || data.referralRewards.ring.toFixed(2)} RING</span>\n                  <span>{\"0\" || data.referralRewards.kton.toFixed(2)} KTON</span>\n                </div>\n              </div>\n            ))\n          ) : (\n            <div style={{ marginTop: \"20px\", textAlign: \"center\" }}>No Data</div>\n          )}\n        </div>\n      </div>\n    </Fade>\n  );\n};\n\nexport default memo(ReferralLeaderboard);\n","var _path, _g, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBifrost(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 100,\n    height: 100,\n    viewBox: \"0 0 100 100\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 50C0 22.3858 22.3858 0 50 0V0C77.6142 0 100 22.3858 100 50V50C100 77.6142 77.6142 100 50 100V100C22.3858 100 0 77.6142 0 50V50Z\",\n    fill: \"black\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M50 72.3684H19.7368L65.1316 26.9736H80.2631L50 72.3684Z\",\n    fill: \"url(#paint0_linear)\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear\",\n    x1: 50,\n    y1: 26.9736,\n    x2: 50,\n    y2: 72.3684,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#7AEDCF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.201333,\n    stopColor: \"#68CEFA\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.403244,\n    stopColor: \"#689CF8\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.602076,\n    stopColor: \"#AC57C0\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.801867,\n    stopColor: \"#E65659\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#F2C241\"\n  })), /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 60.5263,\n    height: 45.3947,\n    fill: \"white\",\n    transform: \"translate(19.7368 26.9736)\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBifrost);\nexport default __webpack_public_path__ + \"static/media/bifrost.44eb2d435727566fbe666170c295e951.svg\";\nexport { ForwardRef as ReactComponent };","var _rect, _path, _path2, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgParallelHeiko(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 200,\n    height: 200,\n    viewBox: \"0 0 200 200\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 200,\n    height: 200,\n    fill: \"white\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M63.0641 96.3672L33.4438 109.677C26.8591 112.635 26.877 121.985 33.473 124.918L106.504 157.398C110.871 159.34 115.863 159.32 120.214 157.341L166.713 136.204C173.249 133.233 173.237 123.951 166.694 120.997L137.454 107.796L120.217 115.631C115.865 117.61 110.874 117.63 106.506 115.688L63.0641 96.3672Z\",\n    fill: \"url(#paint0_linear)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M80.8013 42.4841C85.1683 40.5219 90.1678 40.5263 94.5313 42.4964L166.702 75.08C173.245 78.0343 173.257 87.3165 166.721 90.2875L120.222 111.425C115.871 113.403 110.879 113.423 106.512 111.481L33.4811 79.0013C26.8851 76.0678 26.8671 66.7183 33.4518 63.7596L80.8013 42.4841Z\",\n    fill: \"url(#paint1_linear)\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear\",\n    x1: 171.581,\n    y1: 120.946,\n    x2: 28.5482,\n    y2: 120.946,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#EF18AC\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#FAD972\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint1_linear\",\n    x1: 171.586,\n    y1: 95.7346,\n    x2: 28.5536,\n    y2: 95.7346,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#5314F1\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#04E2FF\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgParallelHeiko);\nexport default __webpack_public_path__ + \"static/media/parallel-heiko.523444b3fab8bc81ada193325e75099a.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31, _path32, _path33, _path34, _path35, _path36, _path37, _path38, _path39, _path40, _path41, _path42, _path43, _path44, _path45, _path46, _path47;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEquilibrium(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 309,\n    height: 308,\n    viewBox: \"0 0 309 308\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M254.04 94.1006L203.959 124.176L254.04 154.378L303.999 124.176L254.04 94.1006Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M53.9596 94.1006L4 124.176L53.9596 154.378L104.04 124.176L53.9596 94.1006Z\",\n    fill: \"white\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M104.041 244.226V304L154.001 273.924V214.15L104.041 244.226Z\",\n    fill: \"#1792FF\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M104.04 124.538V184.312L53.959 154.236V94.4624L104.04 124.538Z\",\n    fill: \"#A4D8FF\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M104.04 184.337V243.985L53.959 214.035V154.261L104.04 184.337Z\",\n    fill: \"#A4D8FF\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M53.9596 154.252V214.026L4 183.95V124.176L53.9596 154.252Z\",\n    fill: \"#A4D8FF\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M154.001 214.151V273.925L104.041 243.975V184.201L154.001 214.151Z\",\n    fill: \"#A4D8FF\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M203.96 124.302V184.076L154 154V94.2266L203.96 124.302Z\",\n    fill: \"#A4D8FF\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M104.04 64.1508V123.925L53.959 93.8489V34.0752L104.04 64.1508Z\",\n    fill: \"#A4D8FF\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M203.96 243.974V303.748L154 273.798V214.024L203.96 243.974Z\",\n    fill: \"#A4D8FF\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M104.04 243.974V303.748L53.959 273.798V214.024L104.04 243.974Z\",\n    fill: \"#A4D8FF\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M203.959 124.302V184.076L254.04 154V94.2266L203.959 124.302Z\",\n    fill: \"#1792FF\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M203.959 64.1508V123.925L254.04 93.8489V34.0752L203.959 64.1508Z\",\n    fill: \"#1792FF\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M104.041 124.302V184.076L154.001 154V94.2266L104.041 124.302Z\",\n    fill: \"#1792FF\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M203.959 184.076V243.849L254.04 213.774V154L203.959 184.076Z\",\n    fill: \"#1792FF\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M254.041 154.252V214.026L304.001 183.95V124.176L254.041 154.252Z\",\n    fill: \"#1792FF\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M154 214.026V273.8L203.96 243.85V184.076L154 214.026Z\",\n    fill: \"#1792FF\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M203.959 243.849V303.623L254.04 273.547V213.773L203.959 243.849Z\",\n    fill: \"#1792FF\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M104.04 64.2871L53.959 94.3627L104.04 124.564L153.999 94.3627L104.04 64.2871Z\",\n    fill: \"white\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M154.001 34.0752L104.041 64.2767L154.001 94.3523L203.96 64.2767L154.001 34.0752Z\",\n    fill: \"white\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M154.001 154L104.041 184.076L154.001 214.151L203.96 184.076L154.001 154Z\",\n    fill: \"white\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M203.96 4L154 34.0756L203.96 64.2771L254.04 34.0756L203.96 4Z\",\n    fill: \"white\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M104.04 4L53.959 34.0756L104.04 64.2771L153.999 34.0756L104.04 4Z\",\n    fill: \"white\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M203.96 63.8994L154 94.1009L203.96 124.176L254.04 94.1009L203.96 63.8994Z\",\n    fill: \"white\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M53.9596 34.0756V94.101L4 124.177V183.95L53.9596 214.026V273.8L104.04 303.749L154 273.8L203.959 303.749L254.04 273.8V214.026L304 183.95V124.177L254.04 94.101V34.0756L203.959 4L154 34.0756L104.04 4L53.9596 34.0756Z\",\n    stroke: \"#001423\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10,\n    strokeLinejoin: \"round\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 124.176L53.9596 154.629\",\n    stroke: \"white\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M104.041 244.228V303.75\",\n    stroke: \"white\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M104.041 184.34V244.239\",\n    stroke: \"#001423\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10,\n    strokeLinejoin: \"round\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M53.959 94.1006V214.026\",\n    stroke: \"#001423\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10,\n    strokeLinejoin: \"round\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M203.959 243.976V184.076\",\n    stroke: \"#001423\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10,\n    strokeLinejoin: \"round\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M203.959 303.75V243.977\",\n    stroke: \"white\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M304.001 123.924L254.041 154.377\",\n    stroke: \"white\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M254.04 34.0752L203.959 64.5283\",\n    stroke: \"white\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M53.959 34.0752L104.04 64.5283\",\n    stroke: \"white\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path35 || (_path35 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M254.041 215.401V95.6016\",\n    stroke: \"#001423\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10,\n    strokeLinejoin: \"round\"\n  })), _path36 || (_path36 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.082 154.261L104.042 184.211\",\n    stroke: \"#001423\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10,\n    strokeLinejoin: \"round\"\n  })), _path37 || (_path37 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M53.959 214.024L153.999 274.301\",\n    stroke: \"#001423\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10,\n    strokeLinejoin: \"round\"\n  })), _path38 || (_path38 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M253.072 214.024L153.152 274.301\",\n    stroke: \"#001423\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10,\n    strokeLinejoin: \"round\"\n  })), _path39 || (_path39 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M254.04 154.391L203.959 184.089\",\n    stroke: \"#001423\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10,\n    strokeLinejoin: \"round\"\n  })), _path40 || (_path40 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M205.653 64.6445L154 94.2168\",\n    stroke: \"#001423\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10,\n    strokeLinejoin: \"round\"\n  })), _path41 || (_path41 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M154 34.0752L257.306 96.114\",\n    stroke: \"#001423\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10,\n    strokeLinejoin: \"round\"\n  })), _path42 || (_path42 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M203.114 183.446L154.001 153.496V94.226L104.041 64.1504\",\n    stroke: \"#001423\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10,\n    strokeLinejoin: \"round\"\n  })), _path43 || (_path43 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M153.999 33.9502L53.959 94.1014\",\n    stroke: \"#001423\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10,\n    strokeLinejoin: \"round\"\n  })), _path44 || (_path44 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M153.996 153.246L103.674 183.573\",\n    stroke: \"#001423\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10,\n    strokeLinejoin: \"round\"\n  })), _path45 || (_path45 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M53.959 94.1006L104.04 124.554V184.202L153.999 214.151V273.799\",\n    stroke: \"white\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path46 || (_path46 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M254.04 94.1006L203.96 124.554V184.202L154 214.151\",\n    stroke: \"white\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path47 || (_path47 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M104.041 124.567L154.001 94.3652L203.96 124.567\",\n    stroke: \"white\",\n    strokeWidth: 8,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEquilibrium);\nexport default __webpack_public_path__ + \"static/media/equilibrium.4b23cdc820fdde4f6eba18b5f4148fe4.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHuobi(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"60.000000pt\",\n    height: \"60.000000pt\",\n    viewBox: \"0 0 60.000000 60.000000\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(0.000000,60.000000) scale(0.100000,-0.100000)\",\n    fill: \"#000000\",\n    stroke: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M191 578 c-109 -42 -191 -161 -191 -278 0 -64 31 -146 75 -198 83 -97 239 -127 357 -69 107 53 162 143 163 267 0 62 -5 85 -28 132 -68 139 -231 202 -376 146z m139 -120 c29 -63 25 -88 -26 -164 -47 -71 -52 -102 -29 -172 11 -34 -12 -27 -56 17 -35 34 -39 44 -39 88 0 50 8 68 66 137 18 21 38 60 45 87 7 27 14 49 16 49 2 0 13 -19 23 -42z m70 -140 c23 -39 26 -107 6 -146 -8 -15 -28 -37 -45 -50 l-30 -22 -16 29 c-8 17 -15 39 -15 50 0 18 70 170 78 171 1 0 11 -15 22 -32z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHuobi);\nexport default __webpack_public_path__ + \"static/media/huobi.8fb9d812f3d505907237195049598729.svg\";\nexport { ForwardRef as ReactComponent };","var _style, _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgGateIo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"\\\\u56FE\\\\u5C42_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 1000 1000\",\n    style: {\n      enableBackground: \"new 0 0 1000 1000\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#DE5959;}\\n\")), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M434.4,461.5l-4.9-4.9c-3.7-3.7-10-1.1-10,4.1v69.7c0,3.2,2.6,5.8,5.9,5.8h69.7c5.2,0,7.8-6.3,4.1-10 c-2.3-2.3-2.3-6,0-8.2l74.2-74.4c2.3-2.3,2.3-6,0-8.2l-6.8-6.7c-3.7-3.7-1.1-10,4.1-10h69.7c3.2,0,5.9,2.6,5.9,5.8v69.7 c0,5.2-6.3,7.8-10,4.1l-4.7-4.7c-2.3-2.3-6-2.3-8.2,0l-125.1,125c-2.3,2.3-6,2.3-8.3,0l-153-153c-2.3-2.3-2.3-6,0-8.3L549,245.7 c2.3-2.3,2.3-6,0-8.3l-49.8-49.8c-2.3-2.3-6-2.3-8.3,0L216.7,461.8c-2.3,2.3-2.3,6,0,8.3l274.2,274.2c2.3,2.3,6,2.3,8.3,0 l274.2-274.2c2.3-2.3,2.3-6,0-8.3L612,300.6c-2.3-2.3-6-2.3-8.3,0l-161,161C440.4,463.8,436.7,463.8,434.4,461.5L434.4,461.5z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGateIo);\nexport default __webpack_public_path__ + \"static/media/gate-io.91dcb3673f806456c66bf47f993ae8e8.svg\";\nexport { ForwardRef as ReactComponent };","var _linearGradient, _path, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBigone(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 50.57 50.57\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _linearGradient || (_linearGradient = /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"a\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 9.24,\n    x2: 49.53,\n    y1: 37.46,\n    y2: 6.89\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.06,\n    stopColor: \"#371570\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.87,\n    stopColor: \"#67377a\"\n  }))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m0 0h50.57v50.57h-50.57z\",\n    fill: \"url(#a)\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#fff\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m19.63 7.39a.39.39 0 0 0 -.47 0l-6.16 4.61a.38.38 0 0 0 -.15.3.37.37 0 0 0 .15.31l15.35 12a.43.43 0 0 0 .24.08.38.38 0 0 0 .3-.15.37.37 0 0 0 -.07-.53l-15-11.75 5.54-4.17 15.16 11.96a.37.37 0 0 0 .53-.07.39.39 0 0 0 -.06-.54l-15.36-12z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m32.57 37.29a10.42 10.42 0 0 0 -9.37-14.85 10.6 10.6 0 0 0 -1.61.13 9.61 9.61 0 1 1 11 14.72zm-9.37 5.21a9.65 9.65 0 0 1 -4.2-18.32v4a10.39 10.39 0 0 0 10.37 10.43 9.66 9.66 0 0 0 1.63-.13 9.6 9.6 0 0 1 -7.79 4zm-9.59-29.94 5.39-4.08v14.85a10.42 10.42 0 0 0 -5.41 5.61v-16.38zm7.39 10.9a9.78 9.78 0 0 1 2.18-.25 9.65 9.65 0 0 1 8.36 14.38 9.31 9.31 0 0 1 -2.19.25 9.65 9.65 0 0 1 -8.35-14.38zm18.73 4.74a10.35 10.35 0 0 0 -19.21-5.4 6.34 6.34 0 0 0 -.74.23v-15.32a.38.38 0 0 0 -.21-.34.38.38 0 0 0 -.4 0l-6.17 4.69a.37.37 0 0 0 -.16.3v20.49a10.35 10.35 0 0 0 19.21 5.41 10.42 10.42 0 0 0 7.68-10.06z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBigone);\nexport default __webpack_public_path__ + \"static/media/bigone.0708015917976773cfc6b0dcf6b106cc.svg\";\nexport { ForwardRef as ReactComponent };","var _style, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPolkadotJs(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"15 15 140 140\",\n    style: {\n      enableBackground: \"new 0 0 170 170\",\n      zoom: 1\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n  .bg0{fill:#FF8C00}\\n        .st0{fill:#FFFFFF;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"bg0\",\n    cx: 85,\n    cy: 85,\n    r: 70\n  }), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M85,34.7c-20.8,0-37.8,16.9-37.8,37.8c0,4.2,0.7,8.3,2,12.3c0.9,2.7,3.9,4.2,6.7,3.3c2.7-0.9,4.2-3.9,3.3-6.7 c-1.1-3.1-1.6-6.4-1.5-9.7C58.1,57.6,69.5,46,83.6,45.3c15.7-0.8,28.7,11.7,28.7,27.2c0,14.5-11.4,26.4-25.7,27.2 c0,0-5.3,0.3-7.9,0.7c-1.3,0.2-2.3,0.4-3,0.5c-0.3,0.1-0.6-0.2-0.5-0.5l0.9-4.4L81,73.4c0.6-2.8-1.2-5.6-4-6.2 c-2.8-0.6-5.6,1.2-6.2,4c0,0-11.8,55-11.9,55.6c-0.6,2.8,1.2,5.6,4,6.2c2.8,0.6,5.6-1.2,6.2-4c0.1-0.6,1.7-7.9,1.7-7.9 c1.2-5.6,5.8-9.7,11.2-10.4c1.2-0.2,5.9-0.5,5.9-0.5c19.5-1.5,34.9-17.8,34.9-37.7C122.8,51.6,105.8,34.7,85,34.7z M87.7,121.7 c-3.4-0.7-6.8,1.4-7.5,4.9c-0.7,3.4,1.4,6.8,4.9,7.5c3.4,0.7,6.8-1.4,7.5-4.9C93.3,125.7,91.2,122.4,87.7,121.7z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPolkadotJs);\nexport default __webpack_public_path__ + \"static/media/polkadot-js.7d2701e2ddbc756e5d6e5eb5dd2af7d5.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMathWallet(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"256.000000pt\",\n    height: \"256.000000pt\",\n    viewBox: \"0 0 256.000000 256.000000\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(0.000000,256.000000) scale(0.100000,-0.100000)\",\n    fill: \"#000000\",\n    stroke: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1140 2554 c-293 -38 -549 -161 -758 -367 -182 -180 -303 -402 -358 -657 -26 -119 -26 -381 0 -500 54 -252 169 -465 349 -648 180 -182 402 -303 657 -358 119 -26 381 -26 500 0 255 55 477 176 657 358 180 183 295 396 349 648 26 119 26 381 0 500 -55 255 -176 477 -358 657 -180 176 -383 288 -628 344 -83 19 -331 33 -410 23z m-210 -749 c78 -40 78 -160 0 -200 -102 -53 -208 53 -155 155 28 55 98 75 155 45z m810 0 c102 -53 60 -215 -55 -215 -38 0 -83 26 -100 60 -53 103 52 208 155 155z m-1002 -211 c31 -20 54 -77 46 -112 -16 -66 -93 -107 -155 -82 -45 19 -69 56 -69 107 0 37 5 50 30 73 45 42 97 47 148 14z m376 12 c67 -28 93 -94 61 -156 -46 -88 -173 -72 -205 25 -16 47 11 103 60 127 42 22 42 22 84 4z m434 -12 c36 -24 55 -78 42 -120 -15 -43 -63 -84 -101 -84 -94 0 -152 105 -97 175 41 53 102 64 156 29z m410 -2 c31 -20 42 -43 42 -90 0 -101 -123 -147 -195 -73 -20 22 -28 41 -29 69 -2 96 99 149 182 94z m-1044 -186 c67 -28 93 -94 61 -156 -21 -41 -53 -60 -101 -60 -128 0 -154 171 -34 219 34 13 36 13 74 -3z m803 3 c123 -46 99 -219 -31 -219 -127 0 -159 165 -42 216 38 16 38 16 73 3z m-1214 -31 c33 -17 46 -39 47 -77 0 -47 -33 -81 -79 -81 -88 0 -114 116 -36 158 26 15 41 15 68 0z m817 -3 c76 -39 44 -155 -42 -155 -89 0 -118 117 -38 157 33 17 45 16 80 -2z m809 0 c74 -38 46 -155 -38 -155 -88 0 -114 113 -36 158 27 15 41 15 74 -3z m-1410 -205 c31 -16 46 -65 31 -100 -34 -83 -160 -60 -160 29 0 64 70 103 129 71z m416 -15 c67 -66 -20 -171 -104 -125 -31 16 -46 65 -31 100 15 37 35 49 78 50 22 0 41 -8 57 -25z m394 15 c31 -16 46 -65 31 -100 -23 -56 -92 -69 -135 -25 -67 66 20 171 104 125z m418 -12 c51 -48 15 -138 -54 -138 -46 0 -68 13 -83 50 -14 34 0 83 29 100 29 17 83 11 108 -12z m-1638 -22 c20 -23 9 -69 -18 -83 -54 -26 -107 40 -65 81 19 20 68 21 83 2z m2025 -2 c42 -41 -11 -107 -65 -81 -27 14 -38 60 -18 83 15 19 64 18 83 -2z m-1826 -196 c18 -18 14 -63 -8 -83 -48 -44 -110 31 -68 83 13 15 60 16 76 0z m817 -12 c31 -47 -23 -104 -73 -77 -29 16 -37 48 -18 76 22 34 70 34 91 1z m811 -5 c26 -52 -34 -104 -76 -66 -23 20 -26 65 -8 83 21 21 71 10 84 -17z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMathWallet);\nexport default __webpack_public_path__ + \"static/media/math-wallet.2a5e75da4d55e33548fc29f043e3c131.svg\";\nexport { ForwardRef as ReactComponent };","import { Modal } from \"antd\";\nimport modalCloseIcon from \"../img/modal-close.png\";\nimport React from \"react\";\nimport classNames from \"classnames/bind\";\nimport styles from \"../styles.module.scss\";\n\nimport bifrostIcon from \"../img/apps/bifrost.svg\";\nimport parallelIcon from \"../img/apps/parallel-heiko.svg\";\nimport equilibriumIcon from \"../img/apps/equilibrium.svg\";\nimport huobiIcon from \"../img/apps/huobi.svg\";\nimport gateioIcon from \"../img/apps/gate-io.svg\";\nimport bigoneIcon from \"../img/apps/bigone.svg\";\nimport polkadotjsIcon from \"../img/apps/polkadot-js.svg\";\nimport mathWalletIcon from \"../img/apps/math-wallet.svg\";\n\nconst cx = classNames.bind(styles);\n\nconst apps = [\n  { name: \"Bifrost\", url: \"https://bifrost.app/vcrowdloan\", icon: bifrostIcon },\n  {\n    name: \"Parallel Heiko\",\n    url: \"https://crowdloan.parallel.fi/#/auction/contribute/polkadot/2003\",\n    icon: parallelIcon,\n  },\n  { name: \"Equilibrium\", url: \"https://xdot.equilibrium.io/en/contribute?p=Darwinia\", icon: equilibriumIcon },\n  { name: \"Huobi\", url: \"https://www.huobi.com/en-us/topic/dot-slot/\", icon: huobiIcon },\n  { name: \"Gate.io\", url: \"https://www.gate.io/slot_auction\", icon: gateioIcon },\n  { name: \"BigONE\", url: \"https://big.one/tw/activity/flow/dot \", icon: bigoneIcon },\n  {\n    name: \"Polkadot.js\",\n    url: \"https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Frpc.polkadot.io#/parachains/crowdloan\",\n    icon: polkadotjsIcon,\n  },\n  { name: \"Math Wallet\", url: \"https://cloud.mathwallet.org/#/auction \", icon: mathWalletIcon },\n];\n\nconst ConnectionFailedModal = ({ showConnectionFailedModal = false, onCancel = () => {} }) => {\n  return (\n    <Modal\n      className={cx(\"connection-failed-modal\")}\n      centered\n      visible={showConnectionFailedModal}\n      footer={null}\n      title=\"Connection failed\"\n      closable={true}\n      closeIcon={<img alt=\"...\" src={modalCloseIcon} />}\n      onCancel={onCancel}\n      width={600}\n    >\n      <div>\n        <div className={cx(\"connection-tips\")}>\n          <span className={cx(\"tip\")}>\n            {\"No polkadot{.js} extension found, please install first. Tutorial refers \"}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://darwinianetwork.medium.com/guide-to-participate-in-the-darwinia-plo-e14b1718787f \"\n            >\n              {\"here\"}\n            </a>\n            {\".\"}\n          </span>\n          <span className={cx(\"tip\")}>{\"Or contribute via other ways :\"}</span>\n        </div>\n        <div className={cx(\"apps-container\")}>\n          {apps.map((app) => (\n            <div key={app.name} className={cx(\"app\")}>\n              <img src={app.icon} alt={app.name} className={cx(\"icon\")} />\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href={app.url}>\n                {app.name}\n              </a>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default React.memo(ConnectionFailedModal);\n","import React, { useRef, useEffect, useState, useMemo } from \"react\";\nimport styles from \"./styles.module.scss\";\nimport classNames from \"classnames/bind\";\nimport { Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Tooltip, Modal, Typography, Spin, message, notification } from \"antd\";\nimport Fade from \"react-reveal/Fade\";\n\nimport darwiniaLogo from \"./img/logo-darwinia.png\";\nimport infoIcon from \"./img/info-icon.png\";\nimport dotIcon from \"./img/dot-icon.png\";\nimport modalCloseIcon from \"./img/modal-close.png\";\nimport copyIcon from \"./img/copy-icon.png\";\n\nimport twitterIcon from \"./img/twitter.png\";\nimport mediumIcon from \"./img/medium.png\";\nimport telegramIcon from \"./img/telegram.png\";\nimport discordIcon from \"./img/discord.png\";\nimport BTCReward from \"./components/btc-reward\";\nimport MetaverseNFT from \"./components/metaverse-nft\";\nimport ringIcon from \"./img/ring-icon.png\";\nimport ktonIcon from \"./img/kton-icon.png\";\n\nimport crowdloanContributeds from \"./data/crowdloanContributeds.json\";\nimport crowdloanMemos from \"./data/crowdloanMemos.json\";\nimport crowdloanReferStatistics from \"./data/crowdloanReferStatistics.json\";\nimport crowdloanWhoStatistics from \"./data/crowdloanWhoStatistics.json\";\nimport accountsContributed from \"./data/accounts.json\";\n\nimport { useEcharts } from \"./useEcharts\";\nimport { useApi, useCurrentBlockNumber, useBalanceAll } from \"./hooks\";\n\nimport {\n  DOT_PRECISION,\n  shortAddress,\n  isInsufficientBalance,\n  isValidContributeDOTInput,\n  isValidAddressPolkadotAddress,\n  formatBalanceFromOrigToDOT,\n  formatBalanceFromDOTToOrig,\n  polkadotAddressToReferralCode,\n  referralCodeToPolkadotAddress,\n  RING_REWARD,\n  KTON_REWARD,\n} from \"./utils\";\nimport { isMobile } from \"../../utils\";\n\n// Polkadot\nimport { web3Enable, web3AccountsSubscribe, web3FromAddress, web3Accounts } from \"@polkadot/extension-dapp\";\nimport Identicon from \"@polkadot/react-identicon\";\nimport { Keyring } from \"@polkadot/keyring\";\nimport { stringToHex } from \"@polkadot/util\";\n\nimport BN from \"bn.js\";\nimport Big from \"big.js\";\n\nimport GlobalContributionActivity from \"./components/global-contribution-activity\";\nimport ReferralLeaderboard from \"./components/referral-leaderboard\";\nimport ConnectionFailedModal from \"./components/connection-failed-modal\";\nimport btcTop5 from \"./top5.json\";\n\nconst cx = classNames.bind(styles);\n\nconst PARA_ID = 2003;\nconst T1_BLOCK_NUMBER = 8263710;\nconst LOCAL_STORAGE_CURRENT_ADDRESS_KEY = stringToHex(\"plo current address\");\n\n/**\n * PLO Contribute\n * @returns ReactNode\n */\nconst PloContribute = () => {\n  const echartsRef = useRef();\n  const unsubscribeAccounts = useRef(null);\n  const [currentAccount, setCurrentAccount] = useState(null);\n\n  const [insufficientBalance, setInsufficientBalance] = useState(false);\n  const [contributeBtnLoading, setContributeBtnLoading] = useState(false);\n  const [accounts, setAccounts] = useState([]);\n  const [inputDot, setInputDot] = useState(\"\");\n  const [inputReferralCode, setInputReferralCode] = useState(\"\");\n  const [showTransactionInProgress, setShowTransactionInProgress] = useState(false);\n  const [showSelectAccountModal, setShowSelectAccountModal] = useState(false);\n  const [showThanksForSupportModal, setShowThanksForSupportModal] = useState(false);\n  const [showConnectionFailedModal, setShowConnectionFailedModal] = useState(false);\n\n  const { api } = useApi();\n  const { currentBlockNumber } = useCurrentBlockNumber(api);\n  const { totalContributed } = useEcharts(echartsRef.current);\n  const { currentAccountBalannce } = useBalanceAll(api, currentAccount ? currentAccount.address : null);\n\n  const myContributeHistory = currentAccount\n    ? crowdloanContributeds.data.crowdloanContributeds.nodes.filter((item) => item.who === currentAccount.address)\n    : [];\n  const myContributedStatistic = currentAccount\n    ? crowdloanWhoStatistics.data.crowdloanWhoStatistics.nodes.find((item) => item.user === currentAccount.address)\n    : null;\n  const myReferContributedStatistic = currentAccount\n    ? crowdloanReferStatistics.data.crowdloanReferStatistics.nodes.find(\n        (item) => item.user === polkadotAddressToReferralCode(currentAccount.address)\n      )\n    : null;\n  const myContributeRank = currentAccount\n    ? accountsContributed.data.accounts.nodes.findIndex((node) => node.id === currentAccount.address)\n    : -1;\n  const myReferralCode = currentAccount\n    ? crowdloanMemos.data.crowdloanMemos.nodes.find((item) => item.who === currentAccount.address)\n    : null;\n\n  const myTotalContribute = myContributedStatistic ? new BN(myContributedStatistic.totalBalance) : new BN(0);\n  // const myContributeTotalPower = myContributedStatistic ? new BN(myContributedStatistic.totalPower) : new BN(0);\n  // const myReferTotalPower = myReferContributedStatistic ? new BN(myReferContributedStatistic.totalPower) : new BN(0);\n\n  let referralsContributeHistory = [];\n  if (myReferContributedStatistic) {\n    const tmp = [];\n    for (let node of myReferContributedStatistic.contributors.nodes) {\n      const {\n        block: { number },\n        extrinsicId,\n        timestamp,\n        balance,\n        id,\n      } = node;\n\n      tmp.push({\n        number,\n        balance,\n        timestamp,\n        extrinsicId,\n        index: id.split(\"-\")[1],\n      });\n    }\n    referralsContributeHistory = tmp;\n  }\n\n  let totalPowerTmp = new BN(0);\n  let globalTotalPower = new BN(\"1000000\").mul(DOT_PRECISION);\n  const allReferContributeData = [];\n\n  crowdloanWhoStatistics.data.crowdloanWhoStatistics.nodes.forEach((node) => {\n    totalPowerTmp = totalPowerTmp.add(new BN(node.totalPower));\n  });\n  crowdloanReferStatistics.data.crowdloanReferStatistics.nodes.forEach((node) => {\n    totalPowerTmp = totalPowerTmp.add(new BN(node.totalPower));\n\n    allReferContributeData.push({\n      user: referralCodeToPolkadotAddress(node.user),\n      totalPower: node.totalPower,\n      totalBalance: node.totalBalance,\n      contributorsCount: node.contributors.totalCount,\n    });\n  });\n\n  globalTotalPower = totalPowerTmp.gt(globalTotalPower) ? totalPowerTmp : globalTotalPower;\n\n  const myContributedShare = Big(myTotalContribute.toString()).div(globalTotalPower.toString());\n  const myReferralCodeFromGql = myReferralCode ? referralCodeToPolkadotAddress(myReferralCode.memo) : null;\n\n  // const myTotalPower = myReferTotalPower.add(myContributeTotalPower);\n  // const myRingReward = myTotalPower.isZero()\n  //   ? \"0\"\n  //   : Big(myTotalPower).div(globalTotalPower.toString()).mul(Big(\"200000000\")).toFixed(4);\n  // const myKtonReward = myTotalPower.isZero()\n  //   ? \"0\"\n  //   : Big(myTotalPower).div(globalTotalPower.toString()).mul(Big(\"8000\")).toFixed(4);\n  const myRingReward = \"0\";\n  const myKtonReward = \"0\";\n\n  let auctionSuccessReward = {\n    base: { ring: Big(0), kton: Big(0) },\n    bonus: { ring: Big(0), kton: Big(0) },\n    referral: { ring: Big(0), kton: Big(0) },\n    total: { ring: Big(0), kton: Big(0) },\n  };\n  if (currentBlockNumber && Number(inputDot) && Number(inputDot) > 0) {\n    const contributePer = Big(Number(inputDot)).mul(DOT_PRECISION).div(globalTotalPower.toString());\n\n    const bonusN = currentBlockNumber < T1_BLOCK_NUMBER ? 0.2 : 0;\n    const referN =\n      isValidAddressPolkadotAddress(inputReferralCode) || isValidAddressPolkadotAddress(myReferralCodeFromGql)\n        ? 0.05\n        : 0;\n\n    const base = {\n      ring: contributePer.mul(RING_REWARD),\n      kton: contributePer.mul(KTON_REWARD),\n    };\n    const bonus = {\n      ring: base.ring.mul(bonusN),\n      kton: base.kton.mul(bonusN),\n    };\n    const referral = {\n      ring: base.ring.add(bonus.ring).mul(referN),\n      kton: base.kton.add(bonus.kton).mul(referN),\n    };\n    const total = {\n      ring: base.ring.add(bonus.ring).add(referral.ring),\n      kton: base.kton.add(bonus.kton).add(referral.kton),\n    };\n\n    auctionSuccessReward = { base, bonus, referral, total };\n  }\n\n  const top5contribute = useMemo(() => btcTop5.reduce((acc, cur) => acc.add(new Big(cur.amount)), new Big(\"0\")), []);\n\n  useEffect(() => {\n    const address = localStorage.getItem(LOCAL_STORAGE_CURRENT_ADDRESS_KEY);\n    (async () => {\n      const extensions = await web3Enable(\"darwinia.network\");\n      if (extensions.length === 0) {\n        // no extension installed, or the user did not accept the authorization\n        // in this case we should inform the use and give a link to the extension\n        return;\n      }\n\n      const keyring = new Keyring();\n      keyring.setSS58Format(0); // Polkadot format address\n\n      if (isMobile()) {\n        const allAccounts = await web3Accounts();\n        setAccounts(\n          allAccounts.map((account) => {\n            if (isValidAddressPolkadotAddress(account.address)) {\n              const pair = keyring.addFromAddress(account.address);\n              if (pair.address === address) {\n                setCurrentAccount({ ...account, address: pair.address });\n              }\n              return { ...account, address: pair.address };\n            } else {\n              return null;\n            }\n          })\n        );\n      } else {\n        unsubscribeAccounts.current && unsubscribeAccounts.current();\n        unsubscribeAccounts.current = await web3AccountsSubscribe((allAccounts) => {\n          setAccounts(\n            allAccounts.map((account) => {\n              if (isValidAddressPolkadotAddress(account.address)) {\n                const pair = keyring.addFromAddress(account.address);\n                if (pair.address === address) {\n                  setCurrentAccount({ ...account, address: pair.address });\n                }\n                return { ...account, address: pair.address };\n              } else {\n                return null;\n              }\n            })\n          );\n        });\n      }\n    })();\n\n    return () => {\n      unsubscribeAccounts.current && unsubscribeAccounts.current();\n      unsubscribeAccounts.current = null;\n    };\n  }, []);\n\n  const handleClickConnectWallet = async () => {\n    if (accounts.length) {\n      setShowSelectAccountModal(true);\n      return;\n    }\n\n    const extensions = await web3Enable(\"darwinia.network\");\n    if (extensions.length === 0) {\n      // no extension installed, or the user did not accept the authorization\n      // in this case we should inform the use and give a link to the extension\n      setShowConnectionFailedModal(true);\n      return;\n    }\n\n    const keyring = new Keyring();\n    keyring.setSS58Format(0); // Polkadot format address\n\n    if (isMobile()) {\n      const allAccounts = await web3Accounts();\n      setAccounts(\n        allAccounts.map((account) => {\n          if (isValidAddressPolkadotAddress(account.address)) {\n            const pair = keyring.addFromAddress(account.address);\n            return { ...account, address: pair.address };\n          } else {\n            return null;\n          }\n        })\n      );\n      setShowSelectAccountModal(true);\n    } else {\n      unsubscribeAccounts.current && unsubscribeAccounts.current();\n      unsubscribeAccounts.current = await web3AccountsSubscribe((allAccounts) => {\n        setAccounts(\n          allAccounts.map((account) => {\n            if (isValidAddressPolkadotAddress(account.address)) {\n              const pair = keyring.addFromAddress(account.address);\n              return { ...account, address: pair.address };\n            } else {\n              return null;\n            }\n          })\n        );\n\n        setShowSelectAccountModal(true);\n      });\n    }\n  };\n\n  const handleClickSelectAccount = async (account) => {\n    setShowSelectAccountModal(false);\n    account && setCurrentAccount(account);\n    localStorage.setItem(LOCAL_STORAGE_CURRENT_ADDRESS_KEY, account.address);\n  };\n\n  const handleChangeInputDot = (e) => {\n    if (isValidContributeDOTInput(e.target.value)) {\n      setInputDot(e.target.value);\n      if (isInsufficientBalance(currentAccountBalannce.availableBalance, e.target.value)) {\n        setInsufficientBalance(true);\n      } else {\n        setInsufficientBalance(false);\n      }\n    }\n  };\n\n  const handleChangeInputReferral = (e) => {\n    try {\n      const referral = new URLSearchParams(new URL(e.target.value).searchParams).get(\"referral\");\n      referral && setInputReferralCode(referral);\n    } catch (error) {\n      setInputReferralCode(e.target.value);\n    }\n  };\n\n  const handleClickContribute = async () => {\n    if (!api) {\n      message.warning(\"api does not connect yet\");\n      return;\n    }\n\n    if (Number(inputDot) >= 5) {\n      const extrinsicContribute = api.tx.crowdloan.contribute(PARA_ID, formatBalanceFromDOTToOrig(inputDot), null);\n      const extrinsicAddMemo = myReferralCodeFromGql\n        ? api.tx.crowdloan.addMemo(PARA_ID, polkadotAddressToReferralCode(myReferralCodeFromGql))\n        : isValidAddressPolkadotAddress(inputReferralCode)\n        ? api.tx.crowdloan.addMemo(PARA_ID, polkadotAddressToReferralCode(inputReferralCode))\n        : null;\n      const injector = await web3FromAddress(currentAccount.address);\n      const tx = extrinsicAddMemo ? api.tx.utility.batch([extrinsicContribute, extrinsicAddMemo]) : extrinsicContribute;\n\n      try {\n        setContributeBtnLoading(true);\n        const unsub = await tx.signAndSend(\n          currentAccount.address,\n          { signer: injector.signer },\n          ({ events = [], status }) => {\n            events.forEach(({ phase, event: { data, method, section } }) => {\n              console.log(`${phase}: ${section}.${method}:: ${data}`);\n\n              if (method === \"Contributed\" && section === \"crowdloan\") {\n                // setContributedValue(formatKSMBalance(data[2]));\n              }\n\n              if (method === \"ExtrinsicSuccess\" && section === \"system\") {\n                if (status.isInBlock) {\n                  // setContributedBlockHash(status.asInBlock);\n                  setShowTransactionInProgress(false);\n                  setShowThanksForSupportModal(true);\n                  setContributeBtnLoading(false);\n                } else if (status.isFinalized) {\n                  unsub && unsub();\n                }\n              }\n\n              if (method === \"ExtrinsicFailed\" && section === \"system\") {\n                setShowTransactionInProgress(false);\n                setContributeBtnLoading(false);\n              }\n            });\n          }\n        );\n        setShowTransactionInProgress(true);\n      } catch (err) {\n        console.log(err);\n        notification.warning({\n          message: \"Failed To Contribute\",\n          description: err.message,\n        });\n        setShowTransactionInProgress(false);\n        setContributeBtnLoading(false);\n      } finally {\n        //\n      }\n    }\n  };\n\n  const handleClickMaxInput = () => {\n    setInputDot(formatBalanceFromOrigToDOT(currentAccountBalannce.availableBalance));\n  };\n\n  useEffect(() => {\n    const referral = new URLSearchParams(window.location.search).get(\"referral\");\n    referral && setInputReferralCode(referral);\n  }, []);\n\n  useEffect(() => {\n    if (currentAccount && inputReferralCode && currentAccount.address === inputReferralCode) {\n      notification.warning({\n        message: \"Referral Check\",\n        description: \"Can not set yourself account as a referral\",\n      });\n      setInputReferralCode(\"\");\n    }\n  }, [currentAccount, inputReferralCode]);\n\n  return (\n    <div className={cx(\"main\")}>\n      <div className={cx(\"magic-01\")} />\n      <div className={cx(\"magic-02\")} />\n\n      <Container>\n        {/* Heading */}\n        <Fade bottom fraction={0.1} duration={1000} distance={\"50px\"}>\n          <div className={cx(\"heading-container\")}>\n            <div className={cx(\"heading-container-logo\")}>\n              <Link to=\"/\">\n                <img alt=\"...\" src={darwiniaLogo} className={cx(\"heading-container-logo-img\")} />\n              </Link>\n              <div className={cx(\"heading-container-logo-plo\")}>\n                <span>PLO</span>\n              </div>\n            </div>\n\n            <div className={cx(\"heading-container-right\")}>\n              <a\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n                href=\"https://darwinianetwork.medium.com/guide-to-participate-in-the-darwinia-plo-e14b1718787f\"\n                className={cx(\"heading-container-right-how-it-works-link\")}\n              >\n                <span>How it works</span>\n              </a>\n              {currentAccount ? (\n                <div className={cx(\"heading-container-current-account-wrap\")}>\n                  <div className={cx(\"heading-container-current-account\")}>\n                    <span>{shortAddress(currentAccount.address)}</span>\n                    <Identicon value={currentAccount.address} size={isMobile() ? 15 : 30} theme=\"polkadot\" />\n                  </div>\n                  <button\n                    className={cx(\"heading-container-change-account\")}\n                    onClick={() => setShowSelectAccountModal(true)}\n                  >\n                    <span>Change</span>\n                  </button>\n                </div>\n              ) : (\n                <button className={cx(\"heading-container-connnect-wallet-btn\")} onClick={handleClickConnectWallet}>\n                  <span>Connect Wallet</span>\n                </button>\n              )}\n            </div>\n          </div>\n        </Fade>\n\n        {/* Contribute, Crowloan, Referral link */}\n        <Fade bottom fraction={0.1} duration={1200} distance={\"50px\"}>\n          <div className={cx(\"contribute-crowloan-referral\")} style={{ display: \"none\" }}>\n            <div className={cx(\"contribute\")}>\n              <h3 className={cx(\"contribute-title\")}>Contribute</h3>\n\n              <div className={cx(\"dot-amount-input-wrap\")}>\n                <p className={cx(\"contribute-lebal\")}>Enter your contribution amount</p>\n                <div className={cx(\"dot-amount-input-control\")}>\n                  <input className={cx(\"contribute-input\")} value={inputDot} onChange={handleChangeInputDot}></input>\n                  <div className={cx(\"dot-amount-input-suffix\")}>\n                    <span className={cx(\"dot-amount-input-dot-suffix\")}>DOT</span>\n                    <button\n                      className={cx(\"dot-amount-input-max-btn\")}\n                      onClick={handleClickMaxInput}\n                      disabled={!currentAccount}\n                    >\n                      <span>MAX</span>\n                    </button>\n                  </div>\n                </div>\n                <div className={cx(\"input-dot-tip-wrap\")}>\n                  <span\n                    className={cx(\"min-contrbution\", {\n                      warning:\n                        (inputDot.length && 0 <= Number(inputDot) && Number(inputDot) < 5) || insufficientBalance,\n                    })}\n                  >\n                    {insufficientBalance ? \"Insufficient balance\" : \"Min contribution: 5 DOT\"}\n                  </span>\n                  <span className={cx(\"my-available-dot\")}>\n                    Available: {formatBalanceFromOrigToDOT(currentAccountBalannce.availableBalance)} DOT\n                  </span>\n                </div>\n              </div>\n\n              <div className={cx(\"referral-code-input-wrap\")}>\n                <p className={cx(\"contribute-lebal\")}>Enter your referral code (optional)</p>\n                <div className={cx(\"referral-code-input-control\")}>\n                  <input\n                    className={cx(\"referral-code-input\")}\n                    value={myReferralCodeFromGql || inputReferralCode}\n                    disabled={!!myReferralCodeFromGql}\n                    onChange={handleChangeInputReferral}\n                  ></input>\n                </div>\n                <span\n                  className={cx(\"invalid-referral-code\", {\n                    show: inputReferralCode && !isValidAddressPolkadotAddress(inputReferralCode),\n                  })}\n                >\n                  Invalid referral code\n                </span>\n              </div>\n\n              <div className={cx(\"auction-success-rewards-wrap\")}>\n                <div className={cx(\"contribute-lebal-wrap\")}>\n                  <p className={cx(\"contribute-lebal\")}>Auction Success Rewards</p>\n                  <Tooltip\n                    overlayClassName=\"tooltip-overlay\"\n                    overlayInnerStyle={{ padding: \"20px\", paddingBottom: \"10px\" }}\n                    color=\"white\"\n                    placement=\"rightTop\"\n                    trigger={[\"click\", \"hover\"]}\n                    title={\n                      <p className={cx(\"tips\")}>\n                        The rewards are dynamic.\n                        <br />\n                        <br />\n                        The rewards on basis of contribution share will be displayed in real-time.\n                        <br />\n                        <br />\n                        RING and KTON will be released linearly based on the contribution share after Darwinia Network\n                        wins the slot auction.\n                      </p>\n                    }\n                  >\n                    <img alt=\"...\" src={infoIcon} className={cx(\"info-icon\")} />\n                  </Tooltip>\n                </div>\n                <div className={cx(\"auction-success-rewards\")}>\n                  <span>Base</span>\n                  <span className={cx(\"token-amount\")}>{auctionSuccessReward.base.ring.toFixed(2)} RING</span>\n                  <span className={cx(\"token-amount\")}>{auctionSuccessReward.base.kton.toFixed(2)} KTON</span>\n\n                  <div className={cx(\"auction-success-rewards-content-wrap\")}>\n                    <span>Bonus</span>\n                    <div className={cx(\"limited-time\")}>\n                      <span>Limited Time</span>\n                    </div>\n                  </div>\n                  <span className={cx(\"token-amount\")}>{auctionSuccessReward.bonus.ring.toFixed(2)} RING</span>\n                  <span className={cx(\"token-amount\")}>{auctionSuccessReward.bonus.kton.toFixed(2)} KTON</span>\n\n                  <span>Referral</span>\n                  <span className={cx(\"token-amount\")}>{auctionSuccessReward.referral.ring.toFixed(2)} RING</span>\n                  <span className={cx(\"token-amount\")}>{auctionSuccessReward.referral.kton.toFixed(2)} KTON</span>\n\n                  <span>Total</span>\n                  <span className={cx(\"total\", \"token-amount\")}>{auctionSuccessReward.total.ring.toFixed(2)} RING</span>\n                  <span className={cx(\"total\", \"token-amount\")}>{auctionSuccessReward.total.kton.toFixed(2)} KTON</span>\n                </div>\n              </div>\n\n              <div className={cx(\"contribute-btn-container\")}>\n                {currentAccount ? (\n                  <button\n                    className={cx(\"contribute-btn\")}\n                    onClick={handleClickContribute}\n                    disabled={!currentAccount || Number(inputDot) < 5 || contributeBtnLoading || insufficientBalance}\n                  >\n                    <Spin spinning={contributeBtnLoading} wrapperClassName={cx(\"contribute-btn-spinning\")}>\n                      <span>{contributeBtnLoading ? \"\" : \"Contribute\"}</span>\n                    </Spin>\n                  </button>\n                ) : (\n                  <button className={cx(\"my-contribute-connect-wallet-btn\")} onClick={handleClickConnectWallet}>\n                    <span>Connect Wallet</span>\n                  </button>\n                )}\n              </div>\n            </div>\n\n            <div className={cx(\"crowloan-referral\")}>\n              <div className={cx(\"crowloan\")}>\n                <h3 className={cx(\"crowloan-title\")}>The Crowdloan</h3>\n\n                <div className={cx(\"total-rewards-wrap\")}>\n                  <span>Total rewards: </span>\n                  <div className={cx(\"total-ring-rewards\")}>\n                    <img alt=\"...\" src={ringIcon} />\n                    <span>200,000,000</span>\n                  </div>\n                  <div className={cx(\"total-kton-rewards\")}>\n                    <img alt=\"...\" src={ktonIcon} />\n                    <span>8,000</span>\n                  </div>\n                </div>\n\n                <div ref={echartsRef} className={cx(\"crowloan-echarts\")} />\n\n                <div className={cx(\"current-total-contribute\")}>\n                  <span>Current total contributions</span>\n                  <div className={cx(\"total-contribute-dot\")}>\n                    <img alt=\"...\" src={dotIcon} />\n                    <span>{formatBalanceFromOrigToDOT(totalContributed)} DOT</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className={cx(\"my-referral-link\")}>\n                <div className={cx(\"my-referral-link-title-wrap\")}>\n                  <h3 className={cx(\"my-referral-link-title\")}>My Referral Link</h3>\n                  {currentAccount && (\n                    <Tooltip\n                      overlayClassName=\"tooltip-overlay\"\n                      overlayInnerStyle={{ padding: \"20px\", paddingBottom: \"10px\" }}\n                      color=\"white\"\n                      placement=\"rightBottom\"\n                      trigger={[\"click\", \"hover\"]}\n                      title={\n                        <p className={cx(\"tips\")}>\n                          You can copy your referral link to invite people to participate and win more awards.\n                        </p>\n                      }\n                    >\n                      <img alt=\"...\" src={infoIcon} className={cx(\"info-icon\")} />\n                    </Tooltip>\n                  )}\n                </div>\n                {currentAccount ? (\n                  <Typography.Link\n                    rel=\"noopener noreferrer\"\n                    className={cx(\"my-referral-link-content\", \"link\")}\n                    code={false}\n                    copyable={{\n                      icon: <img alt=\"...\" src={copyIcon} style={{ width: \"16px\" }} />,\n                      text: `${window.location.origin}/plo_contribute?referral=${currentAccount.address}`,\n                    }}\n                    target=\"_blank\"\n                    href={`/plo_contribute?referral=${currentAccount.address}`}\n                  >\n                    {`${window.location.origin}/plo_contribute?referral=${\n                      isMobile() ? shortAddress(currentAccount.address) : currentAccount.address\n                    }`}\n                  </Typography.Link>\n                ) : (\n                  <span className={cx(\"my-referral-link-content\")}>\n                    Please connect wallet first, and you can copy your referral link to invite people to participate and\n                    win more awards.\n                  </span>\n                )}\n              </div>\n            </div>\n          </div>\n        </Fade>\n\n        {/* Total Contribute History */}\n        <Fade bottom fraction={0.1} duration={1200} distance={\"50px\"}>\n          <div className={cx(\"total-contribute-history\")}>\n            <div className={cx(\"total-contribute-history-title-wrap\")}>\n              <span>👏 Current Total contributions: {formatBalanceFromOrigToDOT(totalContributed)} DOT 👏</span>\n            </div>\n            <div ref={echartsRef} className={cx(\"crowloan-echarts\")} />\n          </div>\n        </Fade>\n\n        {/* My Contribute */}\n        <Fade bottom fraction={0.1} duration={1200} distance={\"50px\"}>\n          <div className={cx(\"my-contribute\")}>\n            <div className={cx(\"my-contribute-title-wrap\")}>\n              <div className={cx(\"my-contribute-title\", { connected: !!currentAccount })}>\n                <h3>My Contribution</h3>\n                <span>\n                  *The reward amount will change in real-time according to the progress of the crowdloan, and the final\n                  result shall prevail.\n                </span>\n              </div>\n              <div></div>\n              {currentAccount ? (\n                <div className={cx(\"my-contribute-container-current-account-wrap\")}>\n                  <div className={cx(\"heading-container-current-account\")}>\n                    <span>{shortAddress(currentAccount.address)}</span>\n                    <Identicon value={currentAccount.address} size={isMobile() ? 15 : 30} theme=\"polkadot\" />\n                  </div>\n                  <button\n                    className={cx(\"heading-container-change-account\")}\n                    onClick={() => setShowSelectAccountModal(true)}\n                  >\n                    <span>Change</span>\n                  </button>\n                </div>\n              ) : (\n                <button className={cx(\"my-contribute-connect-wallet-btn\")} onClick={handleClickConnectWallet}>\n                  <span>Connect Wallet</span>\n                </button>\n              )}\n            </div>\n\n            <div className={cx(\"contribute-info-card\")}>\n              <div className={cx(\"contribute-info-item\")}>\n                <span className={cx(\"contribute-info-item-title\")}>Total DOT Contributed</span>\n                <div className={cx(\"current-tag\", \"space\")}>\n                  <span>Current</span>\n                </div>\n                <span className={cx(\"contribute-info-item-value\")}>\n                  {formatBalanceFromOrigToDOT(myTotalContribute).split(\".\")[0]}(\n                  {myTotalContribute.isZero() ? 0 : (myContributedShare * 100).toFixed(4)}%)\n                </span>\n                <button className={cx(\"claim-reward-btn\", \"space\")} disabled={true}>\n                  <span>Claim</span>\n                </button>\n              </div>\n\n              <div className={cx(\"my-contribute-line\")} />\n\n              <MetaverseNFT myTotalContribute={myTotalContribute} currentAccount={currentAccount} />\n\n              <BTCReward currentAccount={currentAccount} />\n\n              <div className={cx(\"contribute-info-item-wrap\")}>\n                <div className={cx(\"contribute-info-item\")}>\n                  <div className={cx(\"contribute-info-item-title-wrap\")}>\n                    <span className={cx(\"contribute-info-item-title\")}>RING Rewards</span>\n                    <Tooltip\n                      overlayClassName=\"tooltip-overlay\"\n                      overlayInnerStyle={{ padding: \"20px\", paddingBottom: \"10px\" }}\n                      color=\"white\"\n                      placement=\"rightTop\"\n                      trigger={[\"click\", \"hover\"]}\n                      title={\n                        <p className={cx(\"tips\")}>\n                          RING rewards are dynamic.\n                          <br />\n                          <br />\n                          200,000,000 RING will be released linearly based on the contribution share after Darwinia\n                          Network wins the slot auction.\n                        </p>\n                      }\n                    >\n                      <img alt=\"...\" src={infoIcon} className={cx(\"info-icon\")} />\n                    </Tooltip>\n                  </div>\n                  <div className={cx(\"current-tag\")}>\n                    <span>Current</span>\n                  </div>\n                  <span className={cx(\"contribute-info-item-value\")}>{myRingReward}</span>\n                  <button className={cx(\"claim-reward-btn\", \"space\")} disabled={true}>\n                    <span>Claim</span>\n                  </button>\n                </div>\n                <div className={cx(\"contribute-info-item\")}>\n                  <div className={cx(\"contribute-info-item-title-wrap\")}>\n                    <span className={cx(\"contribute-info-item-title\")}>KTON Rewards</span>\n                    <Tooltip\n                      overlayClassName=\"tooltip-overlay\"\n                      overlayInnerStyle={{ padding: \"20px\", paddingBottom: \"10px\" }}\n                      color=\"white\"\n                      placement=\"rightTop\"\n                      trigger={[\"click\", \"hover\"]}\n                      title={\n                        <p className={cx(\"tips\")}>\n                          KTON rewards are dynamic.\n                          <br />\n                          <br />\n                          8,000 KTON will be released linearly based on the contribution share after Darwinia Network\n                          wins the slot auction.\n                        </p>\n                      }\n                    >\n                      <img alt=\"...\" src={infoIcon} className={cx(\"info-icon\")} />\n                    </Tooltip>\n                  </div>\n                  <div className={cx(\"current-tag\")}>\n                    <span>Current</span>\n                  </div>\n                  <span className={cx(\"contribute-info-item-value\")}>{myKtonReward}</span>\n                  <button className={cx(\"claim-reward-btn\", \"space\")} disabled={true}>\n                    <span>Claim</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <div className={cx(\"my-contribute-history\")}>\n              <div className={cx(\"contribute-history-wrap\")}>\n                <p>Contribution history</p>\n                {myContributeHistory.length ? (\n                  <div className={cx(\"contribute-history-control\")}>\n                    {myContributeHistory.map((node, index) => (\n                      <div className={cx(\"contribute-history-control-item\")} key={index}>\n                        <span>\n                          {new Date(node.timestamp).toDateString().split(\" \")[1]}{\" \"}\n                          {new Date(node.timestamp).toDateString().split(\" \")[2]}\n                        </span>\n                        <span className={cx(\"dot-amount\")}>{formatBalanceFromOrigToDOT(node.balance)} DOT</span>\n                        <a\n                          className={cx(\"hash-id\")}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={`https://polkadot.subscan.io/extrinsic/${node.extrinsicId}`}\n                        >\n                          {node.id}\n                        </a>\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <div className={cx(\"contribute-history-control\", \"no-data\")}>No Data</div>\n                )}\n              </div>\n              <div className={cx(\"referral-history-wrap\")}>\n                <p>Referral history</p>\n                {referralsContributeHistory.length ? (\n                  <div className={cx(\"referral-history-control\")}>\n                    {referralsContributeHistory.map((data, index) => (\n                      <div className={cx(\"referral-history-control-item\")} key={`${index}}`}>\n                        <span>\n                          {new Date(data.timestamp).toDateString().split(\" \")[1]}{\" \"}\n                          {new Date(data.timestamp).toDateString().split(\" \")[2]}\n                        </span>\n                        <span className={cx(\"dot-amount\")}>{formatBalanceFromOrigToDOT(data.balance)} DOT</span>\n                        <a\n                          className={cx(\"hash-id\")}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={`https://polkadot.subscan.io/extrinsic/${data.extrinsicId}`}\n                        >\n                          {data.number}-{data.index}\n                        </a>\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <div className={cx(\"referral-history-control\", \"no-data\")}>No Data</div>\n                )}\n              </div>\n            </div>\n          </div>\n        </Fade>\n\n        {/* Contribute Pioneers */}\n        <Fade bottom fraction={0.1} duration={1000} distance={\"50px\"}>\n          <div className={cx(\"contribute-pioneers\")}>\n            <div className={cx(\"contribute-pioneers-title-wrap\")}>\n              <div className={cx(\"contribute-pioneers-title\")}>\n                <h3>Contribution Pioneers</h3>\n                <Tooltip\n                  overlayClassName=\"tooltip-overlay\"\n                  overlayInnerStyle={{ padding: \"20px\", paddingBottom: \"10px\" }}\n                  color=\"white\"\n                  placement=\"rightTop\"\n                  trigger={[\"click\", \"hover\"]}\n                  title={\n                    <p className={cx(\"tips\")}>\n                      At the beginning of the second round auction, supporters who have contributed more than 10,000 DOT\n                      and the top 5 people (exclude the Exchange address) ranking will distribute 1 BTC in proportion to\n                      their contribution.\n                    </p>\n                  }\n                >\n                  <img alt=\"...\" src={infoIcon} className={cx(\"info-icon\")} />\n                </Tooltip>\n              </div>\n              {currentAccount && myContributeRank >= 0 && (\n                <div className={cx(\"contribute-pioneers-title-rank\")}>\n                  <Identicon\n                    value={currentAccount.address}\n                    className={cx(\"pioneers-item-account-icon\")}\n                    size={isMobile() ? 15 : 30}\n                    theme=\"polkadot\"\n                  />\n                  <span>My Rank: {myContributeRank + 1}</span>\n                </div>\n              )}\n            </div>\n\n            <div className={cx(\"pioneers-container\")}>\n              {accountsContributed.data\n                ? accountsContributed.data.accounts.nodes.map((node, index) =>\n                    index === 0 || index > 5 ? null : (\n                      <div className={cx(\"pioneers-item\")} key={index}>\n                        <div className={cx(\"pioneers-item-num-icon\")}>\n                          <span>{index + 1}</span>\n                        </div>\n                        <Identicon\n                          value={node.id}\n                          className={cx(\"pioneers-item-account-icon\")}\n                          size={isMobile() ? 26 : 30}\n                          theme=\"polkadot\"\n                        />\n                        <span className={cx(\"pioneers-item-account-name\")}>{shortAddress(node.id)}</span>\n                        <span className={cx(\"pioneers-item-dot-amount\")}>\n                          {formatBalanceFromOrigToDOT(node.contributedTotal)} DOT\n                        </span>\n                      </div>\n                    )\n                  )\n                : null}\n            </div>\n          </div>\n        </Fade>\n\n        <ReferralLeaderboard globalTotalPower={globalTotalPower} />\n\n        <GlobalContributionActivity\n          allReferContributeData={allReferContributeData}\n          globalTotalPower={globalTotalPower}\n          top5contribute={top5contribute}\n        />\n\n        <Fade bottom fraction={0.1} duration={1000} distance={\"50px\"}>\n          <p className={cx(\"all-right\")}>Copyright@2021 Darwinia Network</p>\n        </Fade>\n      </Container>\n\n      <Modal\n        className={cx(\"transaction-in-progress-modal\")}\n        visible={showTransactionInProgress}\n        footer={null}\n        title={null}\n        closable={true}\n        closeIcon={<img alt=\"...\" src={modalCloseIcon} />}\n        onCancel={() => setShowTransactionInProgress(false)}\n      >\n        <div className={cx(\"transaction-in-progress\")}>\n          <Spin size=\"large\" />\n          <span>Transaction in progress ...</span>\n        </div>\n      </Modal>\n\n      <Modal\n        className={cx(\"select-account-modal\")}\n        visible={showSelectAccountModal}\n        footer={null}\n        title=\"Select an Account\"\n        closable={true}\n        closeIcon={<img alt=\"...\" src={modalCloseIcon} />}\n        onCancel={() => setShowSelectAccountModal(false)}\n        width={580}\n      >\n        <div className={cx(\"accounts-container\")}>\n          {accounts.map((account, index) =>\n            account ? (\n              <button className={cx(\"accounts-item\")} key={index} onClick={() => handleClickSelectAccount(account)}>\n                <Identicon value={account.address} size={isMobile() ? 30 : 40} theme=\"polkadot\" />\n                <div className={cx(\"accounts-item-name-address\")}>\n                  <span className={cx(\"name\")}>{account.meta.name}</span>\n                  <span className={cx(\"address\")}>{account.address}</span>\n                </div>\n              </button>\n            ) : null\n          )}\n        </div>\n      </Modal>\n\n      <Modal\n        className={cx(\"thanks-for-support-modal\")}\n        visible={showThanksForSupportModal}\n        onCancel={() => setShowThanksForSupportModal(false)}\n        title={null}\n        footer={null}\n        closeIcon={<img alt=\"...\" src={modalCloseIcon} />}\n      >\n        <div className={cx(\"thanks-for-support-modal-content\")}>\n          <h3 className={cx(\"thanks-for-support-modal-content-title\")}>\n            <span role=\"img\" aria-label=\"thx\">\n              🎉\n            </span>{\" \"}\n            Thank you for supporting Darwinia Network!\n          </h3>\n          <p className={cx(\"thanks-for-support-modal-content-desc\")}>\n            You can track the latest progress of Darwinia Network PLO in the following ways:\n          </p>\n          <div className={cx(\"thanks-for-support-modal-content-contact\")}>\n            <a\n              className={cx(\"thanks-for-support-modal-content-contact-item\")}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              href=\"https://twitter.com/DarwiniaNetwork\"\n            >\n              <img alt=\"...\" src={twitterIcon} />\n            </a>\n            <a\n              className={cx(\"thanks-for-support-modal-content-contact-item\")}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              href=\"https://darwinianetwork.medium.com/\"\n            >\n              <img alt=\"...\" src={mediumIcon} />\n            </a>\n            <a\n              className={cx(\"thanks-for-support-modal-content-contact-item\")}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              href=\"https://t.me/DarwiniaNetwork\"\n            >\n              <img alt=\"...\" src={telegramIcon} />\n            </a>\n            <a\n              className={cx(\"thanks-for-support-modal-content-contact-item\")}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              href=\"https://discord.com/channels/456092011347443723/795384466930663434\"\n            >\n              <img alt=\"...\" src={discordIcon} />\n            </a>\n          </div>\n        </div>\n      </Modal>\n\n      <ConnectionFailedModal\n        showConnectionFailedModal={showConnectionFailedModal}\n        onCancel={() => setShowConnectionFailedModal(false)}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PloContribute);\n","export const isMobile = () => {\n  return (\n    (/Android|webOS|iPhone|iPad|iPod|ios|BlackBerry/i.test(navigator.userAgent) &&\n      !!navigator.userAgent.match(/AppleWebKit.*Mobile.*/)) ||\n    window.innerWidth <= 750\n  );\n};\n"],"names":["useApi","useState","api","setApi","useEffect","wsProvider","WsProvider","ApiPromise","provider","then","_api","catch","err","console","error","cx","classNames","styles","Paragraph","Typography","Title","key","BTCReward","currentAccount","visible","setVisible","checked","setChecked","address","setAddress","isReward","setIsReward","target","btcTop5","toLowerCase","contributeAmount","reward","claim","mark","amount","web3FromAddress","injector","setSigner","signer","message","tx","system","remark","signAndSend","result","status","isFinalized","isInBlock","unsubscribe","events","filter","event","section","forEach","res","method","data","localStorage","getItem","list","JSON","parse","setItem","stringify","isError","includes","className","overlayClassName","overlayInnerStyle","padding","paddingBottom","color","placement","trigger","title","alt","src","infoIcon","hash","disabled","onClick","level","style","textAlign","closeIcon","modalCloseIcon","footer","Form","noValidate","listStyle","required","feedback","type","onChange","isInvalid","label","controlId","placeholder","value","Button","startsWith","width","marginLeft","React","RING_REWARD","DOT_PRECISION","BN","shortAddress","length","slice","MAX_INPUT_DOT","Number","isValidAddressPolkadotAddress","encodeAddress","isHex","hexToU8a","decodeAddress","polkadotAddressToReferralCode","u8aToHex","polkadotAddressToPublicKey","referralCodeToPolkadotAddress","referralCode","publicKey","keyring","Keyring","setSS58Format","addFromAddress","publicKeyToPolkadotAddress","formatBalanceFromOrigToDOT","origBalance","formatBalance","forceUnit","withUnit","withSi","decimals","GET_MY_ADDRESS_REMARKS","gql","excludedList","isAnValidDarwiniaAddress","Web3Utils","MetaverseNFT","myTotalContribute","isRemarked","setIsRemarked","isAccepted","setIsAccepted","claimLoading","setClaimLoading","visibleModalCopyThat","setVisibleModalCopyThat","visibleModalClaimNFT","setVisibleModalClaimNFT","nftDarwiniaAddress","setNftDarwiniaAddress","useQuery","variables","loading","myRemarked","remarkedNftAddresses","nodes","handleClickAcceptAndClaim","isExcluded","find","v","rel","href","gte","muln","lt","wrapperClassName","spinning","onCancel","prev","acceptedIcon","acceptIcon","client","ApolloClient","uri","cache","InMemoryCache","MetaverseNFTWrap","props","ApolloProvider","echarts","TitleComponent","ToolboxComponent","TooltipComponent","GridComponent","DataZoomComponent","LineChart","CanvasRenderer","UniversalTransition","GlobalContributionActivity","allReferContributeData","globalTotalPower","allWhoCrowdloan","top5contribute","crowdloanWhoStatistics","globalContributeColumns","dataIndex","align","render","text","allWhoContributeData","node","push","user","totalPower","totalBalance","globalContributeDataSource","i","nodeWho","nodeRefer","Big","div","toString","item","myDot","referrals","contributorsCount","referralDot","curRingRewards","curKtonRewards","curBtcRewards","curNft","bottom","fraction","duration","distance","columns","dataSource","pagination","total","totalCount","size","showSizeChanger","ReferralLeaderboard","allReferCrowdloan","crowdloanReferStatistics","referralLeaderboardData","nodeTotalPowerBN","contributePer","contributors","accumulatedContribution","referralRewards","ring","mul","kton","map","index","rank","rank2","rank3","marginTop","memo","apps","name","url","icon","bifrostIcon","parallelIcon","equilibriumIcon","huobiIcon","gateioIcon","bigoneIcon","polkadotjsIcon","mathWalletIcon","ConnectionFailedModal","showConnectionFailedModal","centered","closable","app","PARA_ID","LOCAL_STORAGE_CURRENT_ADDRESS_KEY","stringToHex","PloContribute","echartsRef","useRef","unsubscribeAccounts","setCurrentAccount","insufficientBalance","setInsufficientBalance","contributeBtnLoading","setContributeBtnLoading","accounts","setAccounts","inputDot","setInputDot","inputReferralCode","setInputReferralCode","showTransactionInProgress","setShowTransactionInProgress","showSelectAccountModal","setShowSelectAccountModal","showThanksForSupportModal","setShowThanksForSupportModal","setShowConnectionFailedModal","unsubRef","currentBlockNumber","setCurrentBlockNumber","rpc","chain","subscribeNewHeads","header","number","unsub","current","useCurrentBlockNumber","dom","totalContributed","setTotalContributed","chart","date","crowdloanContributeds","balance","timestamp","split","replace","add","option","tooltip","xAxis","boundaryGap","yAxis","series","symbol","sampling","itemStyle","areaStyle","offset","d","toFixed","setOption","dispose","useEcharts","freeBalance","lockedBalance","availableBalance","currentAccountBalannce","setCurrentAccountBalannce","derive","balances","all","balancesAll","useBalanceAll","myContributeHistory","who","myContributedStatistic","myReferContributedStatistic","myContributeRank","accountsContributed","id","myReferralCode","crowdloanMemos","referralsContributeHistory","tmp","block","extrinsicId","totalPowerTmp","gt","myContributedShare","myReferralCodeFromGql","auctionSuccessReward","base","bonus","referral","bonusN","referN","useMemo","acc","cur","web3Enable","isMobile","web3Accounts","allAccounts","account","pair","web3AccountsSubscribe","handleClickConnectWallet","handleClickSelectAccount","handleClickContribute","extrinsicContribute","crowdloan","contribute","dotBalance","extrinsicAddMemo","addMemo","utility","batch","phase","log","notification","description","URLSearchParams","window","location","search","get","Container","to","darwiniaLogo","theme","display","e","availableOrig","needDOT","isNaN","warning","URL","searchParams","show","ref","code","copyable","origin","connected","isZero","Date","toDateString","contributedTotal","meta","role","test","navigator","userAgent","match","innerWidth"],"sourceRoot":""}